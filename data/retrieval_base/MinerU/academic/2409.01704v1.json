[
    {
        "page_idx": 0,
        "text": "# \nHaoran Wei1,∗, Chenglong $\\mathbf{Liu^{3,*}}$ , Jinyue Chen3, Jia Wang1, Lingyu $\\mathbf{Kong}^{3}$ , Yanming $\\mathbf{X}\\mathbf{u}^{1}$ , Zheng $\\mathbf{Ge^{1}}$ , Liang Zhao1, Jianjian $\\mathbf{Sun^{1}}$ , Yuang Peng4, Chunrui $\\mathbf{Han^{2}}$ , Xiangyu Zhang1,2 \n1StepFun 2Megvii Technology 3University of Chinese Academy of Sciences 4Tsinghua University https://github.com/Ucas-HaoranWei/GOT-OCR2.0 \n# \nTraditional OCR systems (OCR-1.0) are increasingly unable to meet people’s usage due to the growing demand for intelligent processing of man-made optical characters. In this paper, we collectively refer to all artificial optical signals (e.g., plain texts, math/molecular formulas, tables, charts, sheet music, and even geometric shapes) as \"characters\" and propose the General OCR Theory along with an excellent model, namely GOT, to promote the arrival of OCR-2.0. The GOT, with 580M parameters, is a unified, elegant, and end-to-end model, consisting of a high-compression encoder and a long-contexts decoder. As an OCR-2.0 model, GOT can handle all the above \"characters\" under various OCR tasks. On the input side, the model supports commonly used scene- and document-style images in slice and whole-page styles. On the output side, GOT can generate plain or formatted results (markdown/tikz/smiles/kern) via an easy prompt. Besides, the model enjoys interactive OCR features, i.e., region-level recognition guided by coordinates or colors. Furthermore, we also adapt dynamic resolution and multipage OCR technologies to GOT for better practicality. In experiments, we provide sufficient results to prove the superiority of our model. \n# \nOptical Character Recognition (OCR) is a widely used technology that extracts the characters embedded in an optical image into an editable format. Typical OCR systems [10] in the OCR-1.0 era are mainly designed based on a multi-modular pipeline style, commonly including element detection, region cropping, and character recognition parts. Each module is prone to falling into local optima, making the whole system incur high maintenance costs. Moreover, traditional OCR methods have insufficient general ability, reflected as different OCR-1.0 networks usually designed for different sub-tasks. Nevertheless, choosing a suitable one from diverse OCR models for a special task is always inconvenient for users. \nIn the past year, Large Vision Language models (LVLMs) [5, 9, 24, 27, 36, 46, 49] have developed rapidly and showcased impressive performance. As a highly anticipated ability, the OCR performance of current LVLMs is continuously improving. Based on CLIP [37], LLaVA [24] naturally acquires the English OCR ability after the instruct tuning phase. To lift the OCR accuracy and support other languages, e.g., Chinese, Qwen-VL [5] unfreezes its image encoder (a CLIP-G) and uses lots of OCR data in its stage-two training. Innovatively, Vary [46] generates a new high-resolution OCR vision vocabulary paralleling the CLIP branch to deal with document-level dense OCR. By contrast,"
    },
    {
        "page_idx": 1,
        "text": "# \nFigure 1: On the input side, GOT supports various optical image types, such as commonly used photographs and documents. Besides, as a general OCR-2.0 model, GOT can handle more tasks, e.g., sheet music, molecular formulas, easy geometric shapes, charts, etc. Moreover, the model can adapt to region-focus OCR, high-resolution OCR, and multiple-page OCR. GOT mainly supports English and Chinese and can control the structure results (Mathpix markdown/tikz/smiles/kern) via a prompt."
    },
    {
        "page_idx": 2,
        "text": "InternVL-1.5 [9] and other models [27, 50] utilize a sliding window manner to crop the whole image into multiple sub-patches for high-resolution OCR. Hence, a consensus is that optical character perception and recognition are the foundation of text-driven image understanding, drawing many researchers to pay more attention to LVLMs’ OCR booster. \nHowever, the popular designs of LVLMs may not be suitable for diverse OCR tasks for the following reasons: 1) The conflicts between perception and reasoning. LVLMs mainly focus on visual reasoning performance, e.g., VQA [33, 42], because that is what the LLM excels at. To quickly obtain the QA-gain benefits from LLMs, most LVLMs [15, 24, 49] align image tokens to text ones. However, it is unreasonable to do this for pure perception OCR tasks, especially high-density text scenes, because each aligned vision token (biased towards text token) cannot compress enough characters. Imagine how wasteful it is to use thousands of image tokens, e.g., the image-cropping manner [9, 23], to encode an equal amount of optical characters (e.g., texts within only an A4-PDF page). 2) High iteration and deployment costs. LVLM often enjoys billions of parameters, leading to the post-training and deployment costs being too high. Generally speaking, for LVLMs, fine-tuning is not enough once we want to add a new OCR pattern, e.g., a new language, instead of enough GPU resources for pre-training. However, rerunning the pre-training with billions of parameters, only to introduce a new OCR feature, is also wasteful. \nAccordingly, we propose the general OCR theory, i.e., OCR-2.0, to break the bottlenecks of both traditional and LVLM manners on OCR tasks. We think that a model of OCR 2.0 should have the following essential characteristics: \n• End-to-end. Compared to OCR-1.0 models with complex procedures, the OCR-2.0 model should enjoy a unified and end-to-end architecture to ensure lower maintenance costs. It is cool that a beginner can quickly master the entire OCR system in the 2.0 era.   \n• Low training and inference costs. The OCR-2.0 model should not be a chatbot, like LVLM, that focuses on reasoning tasks. Its focus should be on strong perception and recognition of optical characters, so it needs a reasonable number of model parameters in exchange for lower training and inference costs.   \n• Versatility. The OCR-2.0 model’s other important point is versatility, including recognizing more general artificial optical “characters”, e.g., sheet music, charts, geometric shapes, etc. Besides, the model should support the output format with stronger readability, e.g., LTeX/Markdown format for formulas and tables. \nBased on the proposed general OCR theory, we present a primary OCR-2.0 model (GOT) to bridge the gap between OCR-1.0 models and people’s higher optical character processing demands. In architecture, we adopt the unsophisticated encoder-decoder paradigm for the model. Specifically, GOT enjoys a high compression rate encoder to transfer the optical image to tokens as well as a long context length decoder to output the corresponding OCR results. The encoder has approximately 80M parameters posing $1024\\times1024$ input size which is enough to deal with commonly used photo/document input styles. Each input image will be compressed to tokens with $256\\times1024$ dimensions. The decoder of GOT, with 0.5B parameters, supports 8K max length tokens to ensure it can tackle long-context scenarios. We devise an effective and efficient training strategy for GOT, which can be divided into three procedures, i.e., decoupled pre-training of the encoder, joint-training of the encoder with a new decoder, and further post-training of the decoder. Besides, to further lift the practicality of GOT, we additionally adapt the fine-grained OCR feature for better interactivity, dynamic resolution strategy for ultra-high-resolution images (e.g., over 2K), and the multi-page OCR technology to alleviate the problem of difficulty in breaking pages in PDF image-text pairs (e.g., page breaks in .tex files). To support each training stage, we do many data engines for synthetic data production, which is the key to the success of GOT and will be described in detail in this paper. The main input data format supported by our model can be seen in Figure 1. \nAs a model for envisioning OCR-2.0, GOT demonstrates promising performance in our experiments in various OCR tasks. We hope the proposed simple and elegant GOT can draw more researchers to invest in the research of OCR-2.0. Of course, the path to OCR-2.0 is still long and GOT also enjoys much improvement room, such as supporting more languages, more general artificial signals, and more complex geometries. In this new era led by LVLMs, we are convinced that the pure OCR model is not over, it may even be a new beginning."
    },
    {
        "page_idx": 3,
        "text": "# \n# \nOptical Character Recognition (OCR) is a classic research topic that aims to convert the image’s optical contents into an editable format for further downstream processing. Traditional OCR systems, called OCR-1.0, typically use a framework that is assembled from multiple expert modules. For instance, to handle diverse optical characters, the OCR system [10] is usually developed by integrating several domain expert networks, such as layout analysis [54], text detection [18, 19, 26, 30, 43, 45, 52, 55], region extraction, and contents recognition [11, 14, 16]. The reason for using such a pipeline scheme is that the text recognition module (the OCR part) failed to scale up successfully, which can only deal with the image format of small slices, resulting in the entire OCR process being in the form of first detecting texts/cropping regions, and then recognizing the results within the slice. However, a system with complicated procedures may suffer potential systematic errors and high maintenance costs. Although some OCR-1.0 models, e.g., Nougat [6] can directly process documents at the whole page level, they are often designed and trained for a specific sub-task, leading to unsatisfactory general ability. In the OCR-1.0 era, one inconvenient thing is that we usually need to switch different models according to various OCR needs. \n# \nLarge Vision-Language Models (LVLMs) [5, 9, 20, 24, 27, 46, 49] have attracted lots of attention in the AI-community due to their powerful generalization capabilities. For the current LVLMs owning perception-reasoning comprehensive capacity, the OCR ability has become a hot spot with the increasing demand for text-driven visual understanding. Most LVLMs’ OCR capabilities come from the ready-made CLIP [37], especially those that freeze CLIP encoder [24] to complete the entire LVLM training. For such models, the vanilla CLIP, mainly with English scene text knowledge, is the bottleneck for the OCR performance to out-of-domain tasks, such as other languages or documents. Some other LVLMs [5, 49] choose to unfreeze the encoder and freeze the LLM for training to enhance the CLIP-encoder and align the image tokens to text ones. These models will face the problem of low optical character compression rate, as it is difficult for frozen LLM to decode too much text from an aligned image token. To alleviate this problem, some models [9, 27, 50] adopt a sliding window manner to decompose input images into smaller patches. Although this dynamic resolution approach is highly effective in processing high-resolution input images, e.g., PDF, it will result in excessive image tokens and limit the max length of the generated OCR result to some extent. \n# \nIn this work, we propose the general OCR theory, i.e., OCR-2.0 (as expounded in Section 1) to promote the development of the OCR field. Based on the proposed new theory, we present a novel OCR model (GOT). In this section, we will introduce the technical details of our model, including the framework, multi-stage training strategy, and the corresponding data engines. \n# \nAs illustrated in Figure 2, GOT comprises three modules, i.e., an image encoder, a linear layer, and an output decoder. The linear layer acts as the connector to map the channel dimension between the vision encoder and the language decoder. We utilize three main steps in optimizing the whole GOT model. First, we conduct the pure text recognition task to pre-train the vision encoder. To lift training efficiency and save GPU resources, we choose a tiny decoder to pass gradients to the encoder. In this stage, we feed images containing scene texts and manual images containing document-level characters into the model to allow the encoder to gather the two most commonly used characters’ encoding abilities. In the next stage, we form the architecture of GOT by connecting the trained vision encoder to a new larger decoder. We prepare lots of more general OCR data (e.g., sheet music, math/molecular formulas, and geometric shapes) to scale up the OCR-2.0 knowledge for this stage. In the final stage, we intend to improve the generalization and applicability of GOT further. Specifically, fine-grained and muti-crop/page synthetic data are generated and added for GOT to support region prompt OCR [20], huge image OCR, and batched PDF OCR features."
    },
    {
        "page_idx": 4,
        "text": "Figure 2: The framework of the proposed GOT. Stage 1: We pre-train the vision encoder using a tiny OPT-125M to adapt the OCR tasks efficiently. Stage 2: GOT is built by connecting the vision encoder to Qwen-0.5B and sufficient OCR-2.0 knowledge of more general optical characters is used in this stage. Stage 3: No modification of the vision encoder is required, and GOT is customized to new character recognition features. \n# \nAs aforementioned, GOT enjoys the encoder-decoder structure. Inspired by the LVLMs design, the decoder can be initialized by a well-trained language model. However, we did not find a suitable pre-trained encoder for an OCR-2.0 model, so we must train one ourselves. We hope the new OCR encoder can work well on commonly used scene and document text recognition in various input shapes (both slices and whole pages). \n# \nThe encoder structure we selected is VitDet [17] (base version with about 80M parameters) due to its local attention can greatly reduce the computational cost of high-resolution images. We follow the Vary-tiny setting [46] to design the last two layers of the encoder, which will transfer a $1024\\times1024\\times3$ input image to $256\\times1024$ image tokens. Then, these image tokens are projected into language model (OPT-125M [53]) dimension via a $1024\\times768$ linear layer. Unlike the Vary encoder which only focuses on a single document task under a relatively unitary input shape, we incorporated natural scenes and cropped slices during our pre-training. In the pre-processing stage, images of each shape are directly resized to $1024\\times1024$ squares, as square shapes can be used to adapt to images of various aspect ratios with a compromise. \n# \nIn such an encoder pre-training stage, we use about 5M image-text pairs, including 3M scene text OCR data and 2M document OCR data. Their acquisition methods are as follows: \nFor the natural scene data, the English and Chinese images are sampled from Laion-2B [40] and Wukong [12] datasets, respectively. Then, the pseudo ground truth in these diverse real scenes is captured using PaddleOCR [10] tools. Overall, we obtain 2M dat with half in Chinese and half in English. For text ground truth, we perform two types of processing: 1) remove the bounding box and combine each text content in order from top to bottom and left to right. 2) crop the text region from the original image according to the bounding box and save it as image slices. The later method 2) allows us to obtain another 1M slice-type image-text pairs."
    },
    {
        "page_idx": 5,
        "text": "For the document-level data, we first collect open-source PDF-style files from the Common Crawl and employ the Fitz Python package to extract corresponding dense text content. In such a process, we gain 1.2M full-page PDF-style image-text pairs and $0.8\\mathbf{M}$ image slice data. The slice data, including line- and paragraph-level, is cropped from the PDF image via the parsed bounding box. \n# \n# \nAfter the pre-training step of the vision encoder, we connect it to a larger language model with more powerful capabilities to build the final architecture of GOT. Here, we adopt the Qwen [4] with 500M parameters as the decoder because it has a relatively small number of parameters while incorporating prior knowledge of multiple languages. The dimension of the connector (i.e., the linear embedding layer) is adjusted into $1024\\times1024$ to align with the input channels of the Qwen-0.5B. Hence, GOT enjoys the seamless encoder-decoder paradigm with about 580M parameters in total, which is more computationally resource-friendly and easier to deploy on a consumer-grade GPU with 4G memory. The high compression rate $^{1024\\times1024}$ optical pixels to 256 image tokens) of the encoder saves a lot of token space for the decoder to generate new tokens. Meanwhile, the satisfactory decoding context length (we use about 8K max-length) of the decoder ensures that the GOT can effectively output OCR results under dense scenes. \n# \nTo inject sufficient OCR-2.0 knowledge into GOT, instead of the above-mentioned plain OCR data, we carefully explore several synthesis methods and data engines in this stage, as shown in Figure 3. We will delve into the details of each type of synthetic data in the following paragraphs. \nPlain OCR data. We use $80\\%$ of the data mentioned in Section 3.2.2 as plain OCR data. To further enhance the robustness of GOT, we also add the handwritten text recognition sub-task, which involves various styles of handwriting from letters and diaries in different languages. We collect the Chinese CASIA-HWDB2 [1], English IAM [2], and Norwegian NorHand-v3 [3] datasets to meet our requirements. For the original image-text pairs with the line-level slice format, $6{\\sim}8$ pairs are grouped and randomly pasted into a blank document page to achieve longer-text handwriting recognition and improve training efficiency. \nMathpix-markdown formatted data. Preserving the optical content format is critical to maintaining strong readability for the output results, especially for mathematical formulas and tables. To this end, we use multiple approaches to gather as much formatted data as possible. The details of data collection and production are as follows: \n• Math formulas. We crawl a large number of $\\mathrm{{\\bfB}}\\mathrm{{\\bf\\calG}}\\mathrm{{\\bfX}}$ source .tex files on Arxiv and extract about 1M formula fragments from them. Next, we transfer the formula sources to Mathpix format and use the Chorme-driver to call Mathpix-markdown-it tool to render the sources to HTML format. We then convert the HTML files to SVGs and save them as PNG images. We find that this rendering method is more than $20\\times$ faster than directly using the $\\mathrm{{\\bfA}}\\mathrm{{\\bfI}}_{\\mathrm{E}}\\mathrm{{\\bfX}}$ .   \n• Molecular formulas. We first download the ChEMBL_25 file that contains 2M smile sources. Then we use the Mathpix-markdown-it tool and rdkit.Chem package to gather about 1M of molecular formula image-text pairs.   \n• Table. From the crawled .tex files, we extract about $0.3\\mathbf{M}$ table sources and render them into images. Instead of Mathpix-markdown-it, we directly utilize the LTeX as the rendering tool due to its better rendering effects for advanced tables.   \n• Full page data. Using the Nougat [6] method, we obtain about 0.5M English markdown PDF-text pairs. Besides, following Vary [46, 47], we gather another 0.5M Chinese markdown pairs. We transfer their contents to Mathpix format. Furthermore, we additionally add 0.2M in-house data, which is directly labeled using Mathpix, including books, papers, and financial reports."
    },
    {
        "page_idx": 6,
        "text": "Figure 3: We use six rendering tools to run data engines to make the GOT work well on diverse OCR tasks. We utilize the $\\mathrm{{\\bfA}}\\mathrm{{\\bfI}}_{\\mathrm{E}}\\mathrm{{\\bfX}}$ for tables, Mathpix-markdown-it for math/molecular formulas, Tikz for simple geometric shapes, Verovio for sheet music, and Matplotlib/Pyecharts for charts, respectively. \nMore general OCR data. We hope GOT can deal with more general optical artificial “characters”. Accordingly, we collect three related challenging tasks and generate the corresponding data. They are sheet music, geometric shapes, and charts, respectively. \n• Sheet music. Music is a precious part of the cultural heritage and optical music recognition plays an important role in achieving automatic recognition and transcription of sheet music [7, 38]. We choose the GrandStaff [39] dataset as the source to render. The dataset of polyphonic music scores provides the Humdrum \\*\\*kern transcriptions from the excerpts of music. In addition to the existing approximately 10w image-text samples, we also extract some text samples to re-render via the Verovio Python Package. We mainly add new backgrounds from white to real paper styles and randomly add the title and author information. Note that we only render single-system sheet music due to we don’t have professionals in the relevant field and we do not know how to assemble single-system sheets to a full page. After rendering, we collect about $0.5\\mathrm{M}$ samples. • Geometric shape. Geometry is a key capability of LVLMs and is a necessary step towards AGI. GOT is expected to transform optical geometric elements into TikZ [34] text format. TikZ contains some concise commands to produce basic geometric elements and they can be compiled using LTEX. We employ TikZ-style points and lines and use the simplest point-line spatial relationship to construct simple basic geometric shapes (e.g., circles, rectangles, triangles, and combined shapes) as well as simple function curves (e.g., straight lines, parabolas, ellipses, hyperbolas, and so on). Through this method, we obtained approximately 1M geometric Tikz data. Of course, the geometric rendering is complicated, and our current work is only a preliminary attempt. GOT can only recognize basic geometry at present, yet we believe that with the development of synthetic data technology and OCR-2.0, future models will be able to identify complex geometric shapes. • Chart. Charts are crucial in data visualization and data analysis of several research fields. The proposed GOT refers to the chart structural extraction sub-task as “Chart OCR”, which converts the visual knowledge (e.g., title, source, x-title, y-title, and values) on the chart image into an editable output with a table/Python-dict format. Following OneChart [8], the chart image-text pairs are rendered using Matplotlib and Pyecharts tools. Because GOT is only an OCR model, we don’t need the elements of the chart synthesized to be semantically related. Thus, we just randomly extract entity texts (for the title, source, $\\mathbf{X}$ -title, y-title, etc) from the open-access NLP corpus. The numerical values are random numbers under a controlled distribution. Through this method, we obtained 2M chart data, with half from Matplotlib and half from Pyecharts. \n# \nAfter compressing the general visual information of the diverse OCR-2.0 optical signals via the above two steps, GOT is ready to perform image-level OCR tasks in various scenarios. Based on"
    },
    {
        "page_idx": 7,
        "text": "this perceptually savvy vision encoder, GOT can be easily tuned to meet the users’ needs for input and output. Here, we customize GOT to enable three new features, i.e., fine-grained, multi-page, and dynamic resolution OCR, by only post-training the decoder part. \n# \nAs a high-interactivity feature, fine-grained OCR [20] is the region-level visual perception controlled by spatial coordinates or colors. The user can add box coordinates (box-guided OCR) or color text (color-guided OCR) in the question prompt to request recognition within the region of interest (RoI), avoiding the output of other irrelevant characters. For the natural fine-grained OCR, the source images and annotations are from opensource datasets, including RCTW [41], ReCTS [25], and ShopSign [51], and COCO-Text [44] dataset. The datasets mentioned above provide the text bounding boxes, so we can use them to produce fine-grained (region/color prompt) OCR data directly. For the document-level fine-grained OCR, following Fox [20], we filter out those with the scanned format in the downloaded PDF files and parse the left part using Python packages (Fitz/PDFminer). We record the page-level images, bounding boxes of each line/paragraph, and the corresponding texts to produce the ground truth of the box-guided OCR sub-task. For such a task, each coordinate value is first normalized and then magnified 1000 times. For the color-guided task, we choose the most commonly used colors (red, green, and blue) as the frame colors and draw them via the corresponding bounding box on the original image. Overall, we gather about 60w samples. \n# \nGOT supports $1024\\times1024$ input resolution, which is enough for commonly used OCR tasks, e.g., scene OCR or A4-page PDF OCR. However, dynamic resolution is required for some scenes with huge images, such as two-page PDF horizontal stitching (commonly occurring when reading papers). Thanks to our high compression rate encoder, the dynamic resolution of GOT is achieved under a large sliding window $^{1024\\times1024;}$ ), ensuring that our model can complete extreme resolution OCR tasks with acceptable image tokens. We use the InternVL-1.5 [9] cropping method with tiles max to 12. The ultra-resolution images are synthesized using the single-page PDF data mentioned above, including horizontal and vertical stitching. Through this method, we obtained a total of 50w image-texts pairs. \n# \nFor OCR tasks, it is reasonable to use a “for loop” for multi-page processing. We introduce the multi-page OCR (without “for loop”) feature for GOT due to some formatted PDF data making it difficult to break pages (to obtain text that is completely incompatible with each page) to further scale up, such as .tex in Arxiv. We hope that with GOT, researchers no longer have to worry about PDF ground truth page breaks (e.g., Nougat [6]), as they can train on multiple pages directly. To realize such a feature, we randomly sample 2-8 pages from our Mathpix formatted PDF data and join them together to form a single round OCR task. Each selected page contains text that is less than 650 tokens, to ensure that the overall length does not exceed 8K. In total, we generate about 20w multi-page OCR data, most of which are interlaced between Chinese and English pages. \n# \n# \nWe use $8{\\times}8\\mathrm{L40s}$ GPUs to train GOT. In the pre-training stage, we optimize all model parameters with a global batch size of 128 and train for 3 epochs. We utilize the AdamW [29] optimizer and a cosine annealing scheduler [28] with a start learning rate of 1e-4. The max token length in this stage is set to 4096. In the joint-training stage, we put the max token length to 6000 and train the model with the same optimizer settings as stage 1 for 1 epoch. In the last post-training stage, we expand the max token length to 8192 to allow the model to support multi-patch/page OCR features. In this stage, the beginning learning rate is 2e-5, and the epoch is set to 1. \nDuring each train-data process, $80\\%$ of the data from the previous stage is sampled for the following stage to ensure that the basic ability does not degrade when adding new features."
    },
    {
        "page_idx": 8,
        "text": "\\begin{tabular}{llllllllllllll}\n\\multirow{2}{*}{Method} & \\multirow{2}{*}{Size} & \\multicolumn{2}{l}{EditDistance↓} & \\multicolumn{2}{l}{F1-score↑} & \\multicolumn{2}{l}{Precision↑} & \\multicolumn{2}{l}{Recall↑} & \\multicolumn{2}{l}{BLEU↑} & \\multicolumn{2}{l}{METEOR个} \\\\\n &  & en & zh & en & zh & en & zh & en & zh & en & zh & en & zh \\\\\nUReader[50] & 7B & 0.718 &  & 0.344 &  & 0.296 &  & 0.469 &  & 0.103 &  & 0.287 \\\\\nLLaVA-NeXT[23] & 34B & 0.430 &  & 0.647 &  & 0.573 &  & 0.881 &  & 0.478 &  & 0.582 \\\\\nInternVL-ChatV1.5[9] & 26B & 0.393 & 0.265 & 0.751 & 0.816 & 0.698 & 0.784 & 0.917 & 0.866 & 0.568 & 0.622 & 0.663 & 0.717 \\\\\nNougat [6] & 250M & 0.255 &  & 0.745 &  & 0.720 &  & 0.809 &  & 0.665 &  & 0.761 \\\\\nTextMonkey[27] & 7B & 0.265 &  & 0.821 &  & 0.778 &  & 0.906 &  & 0.671 &  & 0.762 \\\\\nDocOwl1.5 [13] & 7B & 0.258 &  & 0.862 &  & 0.835 &  & 0.962 &  & 0.788 &  & 0.858 \\\\\nVary [46] & 7B & 0.092 & 0.113 & 0.918 & 0.952 & 0.906 & 0.961 & 0.956 & 0.944 & 0.885 & 0.754 & 0.926 & 0.873 \\\\\nVary-toy[47] & 1.8B & 0.082 & 0.142 & 0.924 & 0.914 & 0.919 & 0.928 & 0.938 & 0.907 & 0.889 & 0.718 & 0.929 & 0.832 \\\\\nQwen-VL-Plus [5] &  & 0.096 & 0.121 & 0.931 & 0.895 & 0.921 & 0.903 & 0.950 & 0.890 & 0.893 & 0.684 & 0.936 & 0.828 \\\\\nQwen-VL-Max[5] & >72B & 0.057 & 0.091 & 0.964 & 0.931 & 0.955 & 0.917 & 0.977 & 0.946 & 0.942 & 0.756 & 0.971 & 0.885 \\\\\nFox [20] & 1.8B & 0.046 & 0.061 & 0.952 & 0.954 & 0.957 & 0.964 & 0.948 & 0.946 & 0.930 & 0.842 & 0.954 & 0.908 \\\\\nGOT & 580M & 0.035 & 0.038 & 0.972 & 0.980 & 0.971 & 0.982 & 0.973 & 0.978 & 0.947 & 0.878 & 0.958 & 0.939 \\\\\n\\end{tabular}\n\nTable 1: Performance comparison of dense English (en) and Chinese (zh) OCR on document-level pages. The results of other models are from the previous work [20]. \n# \nIn this section, we verify the performance of GOT on 5 different OCR tasks, including 1) plain document OCR; 2) scene text OCR; 3) fine-grained document OCR; 4) formatted (Mathpix markdown) document OCR; 5) more general character OCR. Note that the test data for each benchmark undergoes strict text similarity filtering to ensure that it is not included in the training data. Sources of each test benchmark and model performance analysis are as follows. \n# \nWe use the open-source Fox [20] benchmark to test the performance of GOT on both Chinese and English PDF OCR. The metrics we used are those commonly in OCR tasks, i.e., edict distance, F1-score, precision, recall, BLEU, and METEOR. Due to the lengthy text of the document, we use word-level segmentation to calculate each indicator. As shown in Table 1, with only 580M, GOT achieves advanced performance on pure text OCR in the document, proving the excellent PDF text perception and recognition ability. \n\n\\begin{tabular}{llllllllllllll}\nMethod & Size & \\multicolumn{2}{l}{EditDistance} & \\multicolumn{2}{l}{F1-score↑} & \\multicolumn{2}{l}{Precision↑} & \\multicolumn{2}{l}{Recall↑} & \\multicolumn{2}{l}{BLEU↑} & \\multicolumn{2}{l}{METEOR↑} \\\\\n &  & en & zh & en & zh & en & zh & en & zh & en & zh & en & zh \\\\\nUReader[50] & 7B & 0.568 &  & 0.661 &  & 0.843 &  & 0.569 &  & 0.258 &  & 0.488 \\\\\nLLaVA-NeXT[23] & 34B & 0.499 &  & 0.558 &  & 0.637 &  & 0.538 &  & 0.379 &  & 0.678 \\\\\nTextMonkey[27] & 7B & 0.331 &  & 0.743 &  & 0.827 &  & 0.710 &  & 0.521 &  & 0.728 \\\\\nDocOwl1.5 [13] & 7B & 0.334 &  & 0.788 &  & 0.887 &  & 0.751 &  & 0.525 &  & 0.708 & = \\\\\nInternVL-ChatV1.5[9] & 26B & 0.267 & 0.123 & 0.834 & 0.913 & 0.942 & 0.934 & 0.790 & 0.902 & 0.587 & 0.588 & 0.744 & 0.876 \\\\\nQwen-VL-Max [5] & >72B & 0.182 & 0.168 & 0.881 & 0.867 & 0.891 & 0.878 & 0.888 & 0.873 & 0.586 & 0.572 & 0.848 & 0.845 \\\\\nGOT & 580M & 0.112 & 0.096 & 0.926 & 0.928 & 0.934 & 0.914 & 0.927 & 0.954 & 0.676 & 0.641 & 0.896 & 0.928 \\\\\n\\end{tabular}\n\nTable 2: Performance of English (en) and Chinese (zh) OCR for scene texts. \n# \nWe collect 400 natural images, half in Chinese and half in English, as the scene text OCR benchmark. All the ground truth in this benchmark are manually corrected. Because the text in the scene image is relatively short, we use character-level segmentation to calculate various metrics. As shown in Table 2, we can see that GOT also works well on natural images, demonstrating the model’s excellent performance on most basic OCR tasks (both document and scene texts). \n# \nConverting the optical PDF image to a markdown-like format is an important feature of an OCR model. To verify this ability of GOT, we carefully prepare 90 pages of samples as a high-quality benchmark. The benchmark, containing both Chinese and English document pages, is first generating pseudo-labels via Mathpix, and then manually correcting for errors. In Table 3, we can see the single-scale $^{1024\\times1024}{}_{,}$ ) GOT can yield satisfactory results. When we use multi-crop inference, the performance of GOT is further lifted especially on formulas and tables with small texts. The results prove the effectiveness of GOT on documents with formatted outputs. Besides, the dynamic resolution scheme is a good choice when processing higher-resolution images."
    },
    {
        "page_idx": 9,
        "text": "Table 3: Performances of formatted document (Chinese/English) and more general OCR. Single means the input is the vanilla image and multi-crop represents the dynamic resolution strategy. \n\\begin{tabular}{llllllll}\n & Types & EditDistance↓ & F1-score↑ & Precision↑ & Recall↑ & BLEU↑ & METEOR↑ \\\\\n\\multirow{9}{*}{Markdown document} & single: \\\\\n & Alltext & 0.097 & 0.942 & 0.944 & 0.942 & 0.877 & 0.876 \\\\\n & Formula & 0.269 & 0.749 & 0.771 & 0.751 & 0.512 & 0.716 \\\\\n & Table & 0.254 & 0.867 & 0.857 & 0.897 & 0.756 & 0.760 \\\\\n & muti-crop: \\\\\n & All text & 0.086 & 0.953 & 0.948 & 0.960 & 0.896 & 0.903 \\\\\n & Formula & 0.159 & 0.865 & 0.858 & 0.882 & 0.628 & 0.828 \\\\\n & Table & 0.220 & 0.878 & 0.861 & 0.919 & 0.779 & 0.811 \\\\\n &  & 0.046 & 0.939 & 0.963 & 0.939 & 0.900 \\\\\n\\multirow{2}{*}{Geneal} & Sheetmusic &  &  &  & 0.888 &  & 0.923 \\\\\n & Geometry & 0.061 & 0.884 & 0.882 &  & 0.766 & 0.882 \\\\\n\\end{tabular}\n\n\n\n# \nWe report the fine-grained OCR metrics of GOT. As shown in Table 4, the GOT is overall better than Fox [20] on both the bounding box-based and color-based referential OCR tasks, indicating that our model enjoys excellent interactive OCR capabilities. \n\n\\begin{tabular}{llllllllll}\n\\multirow{3}{*}{Metrics} & \\multicolumn{5}{l}{English} & \\multicolumn{4}{l}{Chinese} \\\\\n & \\multicolumn{3}{l}{region} & \\multicolumn{2}{l}{color} & \\multicolumn{2}{l}{region} & \\multicolumn{2}{l}{color} \\\\\n & DocOwl1.5[13] & Fox [20] & GOT & Fox [20] & GOT & Fox [20] & GOT & Fox [20] & GOT \\\\\nEditDistance & 0.435 & 0.059 & 0.041 & 0.064 & 0.034 & 0.042 & 0.033 & 0.114 & 0.040 \\\\\nF1-score↑ & 0.670 & 0.957 & 0.970 & 0.940 & 0.966 & 0.955 & 0.965 & 0.884 & 0.957 \\\\\nPrecision↑ & 0.886 & 0.962 & 0.973 & 0.942 & 0.970 & 0.966 & 0.974 & 0.902 & 0.969 \\\\\nRecall↑ & 0.617 & 0.955 & 0.969 & 0.942 & 0.964 & 0.947 & 0.958 & 0.873 & 0.948 \\\\\nBLEU↑ & 0.478 & 0.914 & 0.926 & 0.868 & 0.910 & 0.885 & 0.898 & 0.778 & 0.884 \\\\\nMETEOR↑ & 0.569 & 0.955 & 0.966 & 0.938 & 0.961 & 0.934 & 0.942 & 0.848 & 0.931 \\\\\n\\end{tabular}\n\n\nTable 4: Comparison of fine-grained document OCR. ,Table 5: Performance comparisons on number-centric chart OCR. \n\\begin{tabular}{llllllll}\n & Metric & Deplot (1.3B) [22] & UniChart (0.26B) [31] & ChartVLM (7.3B) [48] & GPT-4V (>100B)[36] & Qwen-VL (>72B)[5] & GOT (0.58B) \\\\\n\\multirow{3}{*}{ChartQA-SE} & AP@strict & 0.614 & 0.423 & 0.718 & 0.504 & 0.586 & 0.747 \\\\\n & AP@slight & 0.709 & 53.18 & 0.814 & 0.606 & 0.685 & 0.845 \\\\\n & AP@high & 0.729 & 0.560 & 0.842 & 0.643 & 0.727 & 0.867 \\\\\n\\multirow{3}{*}{PlotQA-SE} & AP@strict & 0.031 & 0.105 & 0.038 & 0.073 & 0.005 & 0.133 \\\\\n & AP@slight & 16.49 & 0.260 & 0.468 & 0.194 & 0.042 & 0.596 \\\\\n & AP@high & 26.50 & 0.269 & 0.540 & 0.223 & 0.120 & 0.640 \\\\\n\\end{tabular}\n\n\n# \nWe utilize the sheet music, geometry, and chart benchmarks to verify GOT’s more general OCR performance. For the first two tasks, we separately render 100 and 180 additional samples as benchmarks, and as can be seen in Table 3, GOT still performs well on these new OCR tasks. For chart OCR, we use structure-extraction version [8] ChartQA [32] and PlotQA [35] as benchmarks. In Table 5, the chart OCR ability of GOT is even much better than the chart-specific models and popular LVLMs. All results demonstrate the effectiveness of our model on more general OCR tasks. \n# \nThis paper presents a primary OCR-2.0 model that is structurally simpler than OCR-1.0 systems, focuses more on pure OCR tasks than LVLMs, and enjoys superior performance. OCR-2.0 integrates various pan-OCR tasks into one model and is a valuable research direction in model design, data engineering, and application scenarios. We want the simple, elegant, effective, and promising GOT OCR-2.0 model to attract more attention to such a task."
    },
    {
        "page_idx": 10,
        "text": "# \nIn this section, we provide sufficient output results of GOT to show its outstanding OCR performance.   \nWe also demonstrate the format of the corresponding input prompt for different types of OCR tasks. \n# \n# \n# \nNote that \n$$\n\\begin{array}{r}{|2e\\left(e,u\\right)-u|^{2}=1\\qquad\\mathrm{and}\\qquad|e+u|^{2}=2\\left(1+(e,u)\\right)=2\\left(e+u,u\\right).}\\end{array}\n$$\nWe prepare the proof by the following lemma. \nLemma 1.3. Let Φ be an appropriate test function and u E S². Then (cf. (1.17)) \n$$\n\\begin{array}{l}{\\displaystyle\\int_{{\\mathcal{S}}^{2}}{\\phi}({e}+u)d{e}=4\\int_{{\\mathcal{S}}_{+}^{2}(u)}\\left({e},u\\right)\\varPhi(2e\\left(e,u\\right))d{e}}\\ {=4\\int_{{\\mathcal{S}}_{-}^{2}(u)}|(e,u)|\\varPhi(2e\\left(e,u\\right))d{e}=2\\int_{{\\mathcal{S}}^{2}}|(e,u)|\\varPhi(2e\\left(e,u\\right))d{e},}\\end{array}\n$$\nProof. Introducing spherical coordinates 1 ≤[0,π]2 [0,2π] such that \nand u = (1,0,0),one obtains \n$$\n\\begin{array}{l}{\\displaystyle\\int_{S^{2}}\\phi(e+u)d e=}\\ {\\displaystyle\\int_{0}^{\\pi}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\phi(1+\\cos\\varphi_{1},\\sin\\varphi_{1}\\cos\\varphi_{2},\\sin\\varphi_{1}\\sin\\varphi_{2}).}\\end{array}\n$$\nOn thethdinthlntarprt \none obtains \nNote that \n$$\n\\vert2e\\left(e,u\\right)-u\\vert^{2}=1\\quad\\mathrm{and}\\quad\\vert e+u\\vert^{2}=2(1+(e,u))=2\\left(e+u,u\\right).\n$$\nWepreparetheproof bythe following lemma. Lemma 1.3.Let $\\Phi$ beanappropriatetestfunctionandu $\\in\\mathcal{S}^{2}.$ Then (cf. (1.17) \n$$\n\\begin{array}{r l}&{\\int_{S^{2}}\\Phi(e+u)d e=4\\int_{S_{+}^{2}(u)}(e,u)\\Phi(2e(e,u))d e}\\ &{\\quad=4\\int_{S_{-}^{2}(u)}|(e,u)|\\Phi(2e(e,u))d e=2\\int_{S^{2}}|(e,u)|\\Phi(2e(e,u))d e}\\end{array}\n$$\nProof.Introducingsphericalcoordinates $\\varphi_{1}\\in[0,\\pi],\\varphi_{2}\\in[0,2\\pi]\\operatorname{sucl}$ hthat \n$$\ne_{1}=\\cos\\varphi_{1},\\quad e_{2}=\\sin\\varphi_{1}\\cos\\varphi_{2},\\quad e_{3}=\\sin\\varphi_{1}\\sin\\varphi_{2}\n$$\nand $u=(1,0,0)$ ,oneobtains \n$$\n\\begin{array}{r}{\\int_{\\mathcal{S}^{2}}\\Phi(e+u)d e=\\qquad}\\ {\\int_{0}^{\\pi}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\Phi(1+\\cos\\varphi_{1},\\sin\\varphi_{1}\\cos\\varphi_{2},\\sin\\varphi_{1}\\sin\\varphi_{2}).}\\end{array}\n$$\nnthtnin \n$$\n\\sin2\\alpha=2\\sin\\alpha\\cos\\alpha,\\quad1+\\cos2\\alpha=2\\cos^{2}\\alpha,\n$$\none obtains \n$$\n\\begin{array}{l}{{\\displaystyle\\int_{S_{+}^{2}(u)}(e,u)\\varPhi(2e\\left(e,u\\right))d e=\\int_{0}^{\\frac{\\pi}{2}}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\cos\\varphi_{1}\\times}}\\ {{\\displaystyle\\qquad\\phi\\left(2\\cos^{2}\\varphi_{1},2\\cos\\varphi_{1}\\sin\\varphi_{1}\\cos\\varphi_{2},2\\cos\\varphi_{1}\\sin\\varphi_{1}\\sin\\varphi_{2}\\right)}}\\ {{\\displaystyle=\\int_{0}^{\\frac{\\pi}{2}}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\frac{1}{2}\\sin2\\varphi_{1}\\times}}\\ {{\\displaystyle\\qquad\\phi\\left(1+\\cos2\\varphi_{1},\\sin2\\varphi_{1}\\cos\\varphi_{2},\\sin2\\varphi_{1}\\sin\\varphi_{2}\\right)}}\\ {{\\displaystyle=\\frac{1}{4}\\int_{0}^{\\pi}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\varPhi\\left(1+\\cos\\varphi_{1},\\sin\\varphi_{1}\\cos\\varphi_{2},\\sin\\varphi_{1}\\sin\\varphi_{2}\\right),}}\\end{array}\\quad\\left(1.22\\right)}}\\end{array}\n$$\nComparing (1.21) and (1.22) gives (1.20). Proof of Theorem 1.2.Using Lemma \n$$\n\\phi(z)=B(v,w,z-u)\\left[f\\left(v+\\frac{|v-w|}{2}z\\right)f\\left(w-\\frac{|v-w|}{2}z\\right)-f(v)f(w)\\right]\n$$\n$$\n\\begin{array}{r l}&{\\int_{S_{+}^{2}(u)}(e,u)\\Phi(2e\\left(e,u\\right))d e=\\int_{0}^{\\frac{\\pi}{2}}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\cos\\varphi_{1}\\times}\\ &{\\Phi\\left(2\\cos^{2}\\varphi_{1},2\\cos\\varphi_{1}\\sin\\varphi_{1}\\cos\\varphi_{2},2\\cos\\varphi_{1}\\sin\\varphi_{1}\\sin\\varphi_{2}\\right)}\\ &{=\\int_{0}^{\\frac{\\pi}{2}}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\frac{1}{2}\\sin2\\varphi_{1}\\times}\\ &{\\Phi(1+\\cos2\\varphi_{1},\\sin2\\varphi_{1}\\cos\\varphi_{2},\\sin2\\varphi_{1}\\sin\\varphi_{2})}\\ &{=\\frac{1}{4}\\int_{0}^{\\pi}d\\varphi_{1}\\int_{0}^{2\\pi}d\\varphi_{2}\\sin\\varphi_{1}\\Phi(1+\\cos\\varphi_{1},\\sin\\varphi_{1}\\cos\\varphi_{2},\\sin\\varphi_{1}\\sin\\varphi_{2}).}\\end{array}\n$$\nComparing (1.21) and (1.22) gives (1.20). Proof of Theorem 1.2.Using Lemma 1.3 with \n$$\n\\Phi(z)=B(v,w,z-u)\\left[f\\left(v+\\frac{|v-w|}{2}z\\right)f\\left(w-\\frac{|v-w|}{2}z\\right)-f(v)f(w)\\right]\n$$\n\n\\begin{tabular}{lllllllll}\nMethod (test-dev set) & Backbone & lnpot size & AP & APe & APs & APg & APN & AP \\\\\nCenter-guided(anchor-based): \\\\\nFaster R-CNN [Ren etaL, 2015] w/ FPN & ResNet-101 & 1000× 600 & 36.2 & 59.1 & 39.0 & 18.2 & 39.0 & 48.2 \\\\\nRetinaNet w/ FPN [Lin et al., 2017b] & ResNet-101 & 1333 × 800 & 40.8 & 61.1 & 44.1 & 24.1 & 44.2 & 51.2 \\\\\nCascade R-CNN [Cai and Vasconcelos, 2018] & ResNet-101 & 1333 × 800 & 42.8 & 62.1 & 46.3 & 23.7 & 45.5 & 55.2 \\\\\nYOL.Ov4 [Bochkovskiy ef af., 2020] & CSPDarkNet-53 & 608 X 608 & 43.5 & 65.7 & 47.3 & 26.7 & 46.7 & 53.3 \\\\\nCenter-guided(anchor-free): \\\\\nCenterNet [Zhou et ol., 2019] & Hourglass-104 & 512 × 512 & 42.1 & 61.1 & 45.9 & 24.1 & 45.5 & 52.8 \\\\\nFCOS [Tian ef af., 2019] & ResNeXt-101 & 1333 × 800 & 42.1 & 62.1 & 45.2 & 25.6 & 44.9 & 52.0 \\\\\nRcppoints [Yang ef af., 2019] & ResNet-101 & 1333 × 800 & 45.0 & 66.1 & 49.0 & 26.6 & 48.6 & 57.5 \\\\\nCormer-guided: \\\\\nCenterNet [Duan ef aL, 2019] & Hourglass-104 & IIS × IIS & 44.9 & 62.4 & 48.1 & 25.6 & 47.4 & 57.4 \\\\\nCentripetalNet [Dong ef al., 2020] & Hourglass-104 & 511 × 511 & 45.8 & 63.0 & 49.3 & 25.0 & 48.2 & 58.7 \\\\\nCPN (two-stage) [Duan et al, 2020] & Hourglass-104 & 511x511 & 47.0 & 65.0 & 51.0 & 26.5 & 50.2 & 60.7 \\\\\nCormerNet buseline [Law and Deng. 2018] & Hourglass-104 & 511 × 511 & 40.5 & 56.5 & 43.1 & 19.4 & 42.7 & 53.9 \\\\\nw/ Corner Aflinity Improvement & Hourglass-104 & 511 × 511 & 46.3 & 64.0 & 49.9 & 27.4 & 49.3 & 58.7 \\\\\nMethod (val set) &  &  & + 5.8 & 7.5 & 6.8 & 8.0 & 6.6 & ↑4.8 \\\\\nDE1R [Carion et al., 2020] & Backbone & Feature & dV & APso & ATrs & APs & AP & AP \\\\\n & KesNet-50 & Encoder &  & 63.1 & 45.9 & 22.5 & 47.3 & 61.1 \\\\\nDETR [Carion et al., 2020] & ResNet-101 & Encoder & 44.9 & 64.7 & 47.7 & 23.7 & 49.5 & 62.3 \\\\\nSparse R-CNN [Sun ef af., 2021] & ResNet-50 & FPN & 42.8 & 61.2 & 45.7 & 26.7 & 44.6 & 57.6 \\\\\nSparse R-CNN ISun ef af., 2021] & ResNet-101 & FPN & 44.1 & 62.1 & 47.2 & 26.1 & 46.3 & 59,7 \\\\\nw/Corner Affinity & Hourglass-52 & Single & 43.2 & 60.8 & 46.1 & 25.1 & 46.8 & 57.7 \\\\\nw/ Corner Aftinity & Hourglass-104 & Single & 45.1 & 62.9 & 48.3 & 26.7 & 48.5 & 59.8 \\\\\n\\end{tabular}\n\n\n\n\\begin{tabular}{llllllllll}\nMethod (test-dev set) & Backbone & Input size & AP & APso & APs & APs & APM & AP, \\\\\n\\multicolumn{10}{l}{Center-guided(anchor-based):} \\\\\nFaster R-CNN [Ren et al., 2015] w/ FPN & ResNet-101 & 1000 × 600 & 36.2 & 59.1 & 39.0 & 18.2 & 39.0 & 48.2 \\\\\nRetinaNet w/ FPN [Lin et al., 2017b] & ResNet-101 & 1333 × 800 & 40.8 & 61.1 & 44.1 & 24.1 & 44.2 & 51.2 \\\\\nCascade R-CNN [Cai and Vasconcelos, 2018] & ResNet-101 & 1333 × 80 & 42.8 & 62.1 & 46.3 & 23.7 & 45.5 & 55.2 \\\\\nYOLOv4 [Bochkovskiy et al., 2020] & CSPDarkNet- 53 & 608 × 608 & 43.5 & 65.7 & 47.3 & 26.7 & 46.7 & 53.3 \\\\\n\\multicolumn{10}{l}{Center-guided (anchor-free):} \\\\\nCenterNet [Zhou et al., 2019] & Hourglass-104 & 512 × 512 & 42.1 & 61.1 & 45.9 & 24.1 & 45.5 & 52.8 \\\\\nFCOS [Tian et al., 2019] & ResNeXt-101 & 1333 × 800 & 42.1 & 62.1 & 45.2 & 25.6 & 44.9 & 52.0 \\\\\nReppoints [Yang et al., 2019] & ResNet-101 & 1333 × 806 & 45.0 & 66.1 & 49.0 & 26.6 & 48.6 & 57.5 \\\\\n\\multicolumn{10}{l}{Corner-guided:} \\\\\nCenterNet [Duan et al., 2019] & Hourglass-104 & 511 × 511 & 44.9 & 62.4 & 48.1 & 25.6 & 47.4 & 57.4 \\\\\nCentripetalNet [Dong et al., 2020] & Hourglass-104 & 511 × 511 & 45.8 & 63.0 & 49.3 & 25.0 & 48.2 & 58.7 \\\\\nCPN (two-stage) [Duan et al., 2020] & Hourglass-104 & 511 × 111 & 47.0 & 65.0 & 51.0 & 26.5 & 50.2 & 60.7 \\\\\nCornerNet baseline [Law and Deng, 2018] & Hourglass-104 & 511 × 511 & 40.5 & 56.5 & 43.1 & 19.4 & 42.7 & 53.9 \\\\\nw/ Corner Affinity & Hourglass-104 & 511 ×511 & 46.3 & 64.0 & 49.9 & 27.4 & 49.3 & 58.7 \\\\\nImprovement &  &  & ↑ 5.8 & ↑ 7.5 & ↑ 6.8 & ↑ 8.0 & ↑ 6.6 & ↑ 4.8 \\\\\nMethod (val set) & Backbone & Feature & AP & APso & AP=s & APs & APM & APL \\\\\nDETR [Carion et al., 2020] & ResNet-50 & Encoder & 43.3 & 63.1 & 45.9 & 22.5 & 47.3 & 61.1 \\\\\nDETR [Carion et al., 2020] & ResNet-101 & Encoder & 44.9 & 64.7 & 47.7 & 23.7 & 49.5 & 62.3 \\\\\nSparse R-CNN [Sun et al., 2021] & ResNet-50 & FPN & 42.8 & 61.2 & 45.7 & 26.7 & 44.6 & 57.6 \\\\\nSparse R-CNN [Sun et al., 2021] & ResNet-101 & FPN & 44.1 & 62.1 & 47.2 & 26.1 & 46.3 & 59.7 \\\\\nw/ Corner Affinity & Hourglass-52 & Single & 43.2 & 60.8 & 46.1 & 25.1 & 46.8 & 57.7 \\\\\nw/ Corner Affinity & Hourglass-104 & Single & 45.1 & 62.9 & 48.3 & 26.7 & 48.5 & 59.8 \\\\\n\\end{tabular}\n\n\n$$\n\\begin{array}{r l}&{d_{L}(C_{L},\\{v^{\\prime}\\})=|C_{L}|+|\\{v^{\\prime}\\}|+2(d_{T}(C_{L},v^{\\prime})-1)}\\ &{\\qquad=|C_{v}|-1+|S_{v}^{*}|+2(\\mathrm{rad}T-1)}\\ &{\\qquad=|C_{v}|+|S_{v}^{*}|+2\\left(d_{T}\\left(C_{v},S_{v}^{*}\\right)-1\\right)}\\ &{\\qquad-1+2\\left(\\mathrm{rad}T-d_{T}\\left(C_{v},S_{v}^{*}\\right)\\right)}\\ &{\\qquad=d_{L}\\left(C_{v},S_{v}^{*}\\right)+1+2\\left(\\mathrm{rad}T-1-d_{T}\\left(C_{v},S_{v}^{*}\\right)\\right)}\\ &{\\qquad=e_{L}\\left(C_{v}\\right)+1+2\\left(\\mathrm{rad}T-1-d_{T}\\left(C_{v},S_{v}^{*}\\right)\\right).}\\end{array}\n$$"
    },
    {
        "page_idx": 11,
        "text": "# \n# \n[2]andGidedBakppaatn2explanae tioningpeditionwithrcttthmageotentandt wordsofthesetence generatedsofarTheseapproahs provide high-resolution image explanations for CNNmodels [22][23]RPalsoprovideslausibleexplanationsforSTM architectures [24]. [25]. Figure 1 shows an example of the explanationreultsfatenion-gdediagecapioningmd els.Taking LRPas anexamlebothposiiveandnegative evideneisshwwoasetfrmageexplaatos thecontributionofthemageinputisisualizedasheama 2frlinstixlanfu generatedwordstothelatestpredictedwordisshow. \nTheexplanationresultsnFigureIexhibitintitivecor spondenceof the explained word to theimage content and the related sequential input.However, to our best knowledge,few works quantitatively analyze how accurate the image explana tions are grounded to the relevant image content and whether thehighlightedinputs areusedasevidence bythemodelo make decisions.We study the two questions by quantifying the groundingpropetyfatentionandexplanationmethods and by designing an ablation experiment for both the mage explanations and linguistic explanations.We will demonstrate thatxplanationmethodscangenerateimagexlanationwih accatpilonntyree related inputs (pixels of the image input and words of the linguisti sequenenputthatareusedasevidene forth model decisions.Also,explanation methods can disentangle thecontibtionsofthemageandtextinputsndprovidmore interpretableinformationthanpurelymage-centeredattention \nWithexplanatonmethods[2]wehaveadeperndestandingofmagecapioningmodelsbeyondvisualizingt attentioWealsbevethamaecaptioingmdesm times hallucinate words from the learned sentence correlations without looking at the images and sometimes use irelevant evidence tomake predictions.Thehalucination problemis also disussedin27]where the authorsstate thatitis possibly caused by language priorsor visualmisclasificationwhih couldbepartillydetothebiasespresentinthedataset Theimagecationingmodstndteeratethosewo and sentence pattems that appear more frequently during trainingThlanguage priorsarehelpulthoughm cases8ratdtivbiafallg with scene graphs to facilitate image captioning. However. langagebiaisntawaysortrxam men ride snowboards [29] and bananas are not always yellow [30],[31]To this end[29]and[31]attemted to geerate more grounded captionsbyguidingthemodel tomake the right decisions using theright reasons.Theyadopted additional anotatontitnttt thehuman-annotatedrankoftherelevantimage patches design new losses for training. \nInthisaperwrealitnya LRPfi additonaanttonWefstywthxlat especiallyRPcanweaklydiffeentiate thgrounded （tr positiv）andhallucinated (false-positive）words.Seconly based on the findings that LRP reveals the related features of thexplaindwordsandthattheigfisrelevane re indiaespngesineienas in Figure I).we utilizeLRPexplanations to design areweightingmchanismforthecontextrereentationDurn fine-tuning. we up-scale the supporting features and downscaleheppingnsungeicallatedfrm relevance scores.Finally.weuse thereweighed context represeatntprediteexwordfone-tng \n\nLRPIFT is diffeent from standard fine-tuning which weightsthradientsfpraerswithmalleinat grauld relatedfeatures/evidence foradecision andguides themodel len resembleshowwecorretourcognitionbiasForexample. whnwebnnwidtl ofbanansadkeptehrfeaturessuhsthshap. \nWe will demonstrate that LRP-IFT can help to de-bias image captioning models from frequently occurring object words.Though language bias is intrinsic,we can guide the model to be more precise when generating frequent object words rather than hallucinate them. We implement the LRP. IFT on top of pre-trained image captioning models trained withFlickr30K[32]andMSCOCO2017[33] datasets and effectively improve the mean average precision (mAP) of predicted frequent object words evaluated across the test set.At the same time, the overall performance in terms of sentence-level evaluation metrics is maintained. The contributions of this paper are as follows: \nWe establish explanation methods that disentangle the contributions of the image and text inputs and explain image captioning models beyond visualizing attention.   \nWequantitativelymeasureandcomparethe propertiesof explanationmethods and attentionmechanismsncluding tasks of finding the related features/evidence formodel deisionsngndaiy of debugging the models (in terms of providing possible reasons for object hallucination and differentiating hallucinated words).   \nWe propose an LRP-inference fine-tuning strategy that reducesobjcthallucinationandguidesthemodelst be more precise and grounded on image evidence when predicting frequent object words. Our proposed finetuning strategy requires no additional annotations and successfully improves themeanaverage precisionof predicted frequent object words. \nIn the rest of this paper,Section IIintroduces recent image captioning modelsthestate-ofthe-art explanationmethods fo neural networks, and other related works. In Section Il, we will introduce the image captioning model structures applied in this paperTheadaptationsofexplanation methods atenongidedmagecaptionngmdelsaresumried SectionIV.The analyses of attention and explanations and our prpsd-nsryaei Section V. \n[t[pawi22rroo12conr]]hvi,,dii  nt[sdage2 en oc3 pdft]h r, uti erGhgLedehuiRs -ic rsdPt[iee 2eosan4dnlot]sB,sle  oua[n tw2cicpio5kter]hnp o.   grvirFoieemidpnsgaeaepugsrgre eaeapc t tlteie 1aotx duons p s slht[iaoh2bo nle2fwe a]ai s)tri e m.to axoaTnnp g shle eeaexf xnospcalraeo at miniCaontppN enlipesnNmr  t f ooaoamfag rnt ocehLdhd  ecSteeahlsTspeMteeehlxvseip. d lcaeTonnancaktitreini oibgsnu   tLsrieoRhsnoP u wolatfn ss t  ihoanfe n t  iawetmtoxe aaangmtseipo pilenne-cp,tg usbu:ti  oid1tsh)e   vdfpi oisor musiiaamtliigvazeege  ecda  aneapdxst i pnohleaneignantaagttmii voamenpossd,;-   \nttrsTwimhepoholaeonare ktk snhee eisd ag dxderq hpeensluli ccaegagienqsrhn iauttooioteteufin adonntts tnhiidi.v n aeerel pWe dleiuy sentxt u ospapls  ltunttaastuhair .i ldeneny H ye rzu odFetes ilhw geewehevud ootv rarawweend rs t o,1 t a  i oetcqme ovctu ixahudeohgresieua etbrinit  iotmeccb  nieoaetn shnsgtb tteueb ye i k ityncti nmvthoq oeeanau  wtgnaclemedonen  otrdtierwf dgxeyaheiepsnlne,l - tdtagfo hentehawr-elitttrsaeaaiwimWnhhettnxcinmttliatoaegctpeeadht nedhlr t uucnoas dibepeerto iesuilrnayxd nhtontxet  iapd tigatledncptlrneil oa  .ilale oosscbapoubnsifnWpelunui kcsaiesttiigaqiatie  snnmoittinuo i iaoignana(aaoennn ftnllpsgsnn aoes gdi.  g t rexc  om olr Awmat ieemfcoelnohl  noeisttasau gbertnhht oap indhsuoip,oetoib dsfeoi muds lenii ortdtftan savxm)irnhtts  cgiiogeph teca  no[l h eaeamtpg2aignashrnxn e  m6n tt o a ep ]maahpa,gtlaapx t naeiougerinepw odrnedemlrnde eet n ea eeirsla yut tilanry,ihoegssm r maop iaxeenmtmebnteu mved ettecseien e  hadi.tntay aaai   ogmapfopsnsmnWd eo tuaneidwde-sreteog d n csesh v bwctne  iieewvlei auodaoinienpetlnnssrnet,lhgex   cdeuednr  rddpr  ets aceiilmepe  hrulseavicorrdoenmz eenfeoof  i ddlinaooraatvneretlietmthrng itl aedvret ossael-mtaneht angnh rsongtetsaieeltmrio oteoeowemnnris.teehlt[rccceaaTwmmria3laoavignhasnteo0iisuuhdeh]drognnl,t e s  ei   iedusss[rde nd minea.i3cgbdg descrng[ea1 .ecect 2eo]beng i. eT u 8us ypsteenib ]shTon  aln iocsic georadaonnt ree amnielstcws aadpa hgad pilo ptbiln uisiukrasyhcon ogstpae   nstiaan ue[dog neroipp2tranurentdgtroa7 i ngde eg st]aotp,f se ,  edlthr[ an [ iimotws2ew2pcsco h  i o9arttt9rlhriiaib]hhisy]dtoo et gy es aeaerrna o  aht lsengisnrcbtse p  n. id u toad rvtipa dih rriTee[bdmressueeha3inea ae ucanse1hdcartnsagig  ]t o eul av,t he mlp nttaoen faprmhht soc oltfae.ligoebrraue ssus  ireelT p-,aescme mn atcfih stxinrlrpneso oehtaaetetr oadynoies aqamft ienin tustdunal opneie o gtetfilgd t ntahthteo. ocn ot h,he, a tpua  plH lgaiormtrnytdniwteoosa e oo aailadnebwsttd tnk  ll yue oia,eaoeew rrasss ivmnn  awtmdonelyeptgher hdytgreeio.udeii,sltcslisaoohsginwebal ly itLaepbnhsdoaRdepssdi Piiceeett-iiaicdxvotin peaefnoll)eslaan r yil a se tnnahLunednepcRd  n ephPfio wo,anfit rloaldctnirtuiaiendnco-ngsigt n  nusvwasa n tentei.hrendaWsa dgkttu  le h((ys LfaL  fiatRdorlR istspfPtPfhepl e-rye-oIr e pFsessvoiiTnhnesgt)oiiga ntalis w tsvteo r etefvta  hi)htit dtaheeswte e  grotrn yehregc,lldr eeaeo sw t.ve(uie taaxnSdhsnp doe flcseeacuehtdaon   tosana(uttcwdnirrlooyuenyrn,see s-so, f weighting mechanism for the context representation. During   \nfine-tuning, we up-scale the supporting features and down  \nscale the opposing ones using a weight calculated from LRP   \nrelevance scores. Finally, we use the re-weighted context   \nrepresentation to predict the next word for fine-tuning.   \nLRP-IFT is different from standard fine-tuning which   \nweights the gradients of parameters with small learning rates to   \ngradually adapt the model parameters. Instead, it pinpoints the   \ntrroee lstauetnemedb  lfmeesao trhueor eowsn / wtehevio dcseoer nrrceeelc atf tooerud r a f cedoaetgcuinrsiteiioso nn.  Tabhiniadss  .fig nuFieod-rte uesn xtiahnegm  psmltero,adteelgy   \nwhen we see a green banana, we will update the color feature   \nof bananas and keep the other features such as the shape.   \nWe will demonstrate that LRP-IFT can help to de-bias   \nimage captioning models from frequently occurring object   \nIwmFooTr ddoesnl   rttaoo tpbh eeo rf  mtphorareen-t  rpharaielnlcueicsdi eni mawtaheg etehn  ecgamep.n tieWornaeit iinnmgg p mflreoemdqeeulnest n tttr haoiebn jLeeRdctP  \nwith Flickr30K [32] and MSCOCO2017 [33] datasets and   \neffectively improve the mean average precision (mAP) of   \npredicted frequent object words evaluated across the test   \n•sT ehWnete ec enoscnttear-ilbbeliuvstiehol  neesxv paollfau tnahtaiitsoi onp na mpmeeterrt ihacrose di ssa  stm hfaaoitl nlodt iawsinse:entda.ngle the   \ncontributions of the image and text inputs and explain   \nimage captioning models beyond visualizing attention.   \n• We quantitatively measure and compare the properties of   \nexplanation methods and attention mechanisms, including   \ntasks of finding the related features/evidence for model   \ndecisions, grounding to image content, and the capability   \nof debugging the models (in terms of providing possible   \nreasons for object hallucination and differentiating hallu  \ncinated words).   \n• We propose an LRP-inference fine-tuning strategy that   \nreduces object hallucination and guides the models to   \nbe more precise and grounded on image evidence when   \npredicting frequent object words .Our proposed fine  \ntuning strategy requires no additional annotations and   \nsuccessfully improves the mean average precision of   \npredicted frequent object words.   \nIn the rest of this paper, Section II introduces recent image   \ninwnie ltlu hirinastl r ponadeptuwecroe. r tTkhshe,e  i aamnddaa gopett hacteiaro prntiesol anotife nedg x wpmloaorndkaesl.t i Isontnr  uSmcetecuttriheoosnd  IasI Ipt, polwieed   \nattention-guided image captioning models are summarized in   \nSection IV. The analyses of attention and explanations and our proposed LRP-inference fine-tuning strategy are introduced in   \nSection V. \nFigure 5: The plain text (document) OCR ability of GOT. For double-column documents with high text density, GOT can still handle them well, proving the excellent text perception ability."
    },
    {
        "page_idx": 12,
        "text": "Prompt: [x1,y1,x2,y2] OCR with format: \nFigure 6: Scene OCR and fine-grained OCR results of GOT. We equip GOT with more interactive fine-grained OCR tasks, allowing it to output OCR results of regions of interest based on prompts."
    },
    {
        "page_idx": 13,
        "text": "Prompt: OCR  with format upon the patch reference: \n# \ndevisiuidding yaFi Fllyhnvi bodynesswiodesthbodyshmbedding cpnafe spe emeddinndmakeitmore let ttedsic scale variation, a Gaussian-inspired mlti-precision regres sinstrayisdevisdltdilyd cuyofnclogiontthtdist rgeincdfd coerparcanddeaacurbjtbxwihoute inafbisnq robustbodyessGiglumDet canreappromisingefor mance by pairing cormers with consistent bodyshapes EpermreslsnpievPANDAWang tal2020hrkhoGinDeys SOTAab thanCoerNe baseline andsuassinghermehods by morethn10%.Furthe,th competitive results nSTCrowd verifythaplibiltyfrmodnrldestn detetinOuctbtonscanbsmmrizdafolow: Wdeistgiddendlistrategy toaquire discriminative comersmtics Wepropehapeaware odyesstoprovideelle comemachnggudancfocaldese GigmaDeachevesthOTAaccuryh gapielldnakndfmd vanced methods by 10%. \n# \n# \n# \ntiondvtls adsd \n# \nTheen-ideddtoridwidhi to eneode boxes.Most of them(He et al.2017:Cai and Vas tingrobstbody-shaembedingforach. \n# \nThe pedestrian detection task has been widely stdied (Ca ai \nFigure 7: Dynamic resolution of GOT for high-resolution images. In the dual-page paper reading mode shown in the figure (from [21]), the input resolution of the original GOT is not sufficient to handle it. Therefore, we adapt dynamic resolution technology to make the model no longer limited to the size of the image."
    },
    {
        "page_idx": 14,
        "text": "Figure 8: Multi-page (document) OCR ability of GOT. With this feature, researchers can continue to train the GOT with multi-page PDF-text pairs, such as Arxiv paper with .tex file. \nFigure 9: More general OCR results. GOT can process molecular formulas, sheet music, and charts."
    },
    {
        "page_idx": 15,
        "text": "# \n# \n2019年3月22日株式会\n# \n# \n株式会社卜（东京都中央区新川、代表取静役社長：堰江秦文）の子会社株式会社（东京都中央区新川、代表取役社長：武井秀喜）、Trading PostTradingPostHITEABEL[TradingPost WHITELABEL二子玉川店」麻布一一夕工了二子玉川店内|二2019年3月29日（）寸。\n2019年3月22日株式会社\n# \n\nTradingPostWHITELABEL子玉店才の知  \n株式会社卜（东京都中央区新、代表取缔役社長：堀江泰文）の子会社株式会社（東京都中央区新川l、代表取缔役社長：武井秀喜）、TradingPostのTradingostWHITEABE  \nTradingPostWHITELABEL二子玉川店」麻布一一工二子玉店内（2019年3月29（金。\n\n# \n布期限定行\n持、本物求客TradingPost才中心上本物の国内外。麻布、TradingPostITEABEL多彩商品展接客通客满足提案致。\n（主取）Trading Post、SofficeSolid、CARMINA、Tricker’s、Allen Edronds、et\n# \n麻布期間限定行度店  \n持、本物求客TradingPost才中心上質本物の国内外。麻布、TradingPostWHITELABELの多彩商品展接客通客  \n、满提案致。  \n（主取  \nTrading Post、Soffice&Solid、CARMINA、Tricker’s、Allen Edmonds、etc\n\n-No es un pavo, por cierto -dijo la pata-. Fijense en la elegancia con que nada,y en lo derecho que se mantiene.Sin duda que esuno de mis pequenitos. Y si uno lo mira bien, se da cuenta pronto de que es realmente muy guapo. Cuac, cuac!Vamos, vengan conmigo y dejenme ensenarles el mundo y presentarlos al corral entero. Pero no se separen mucho de mi, no sea que los pisoteen.Y anden con los ojos muy abiertos,por siviene el gato. \nYconestoseencaminaron alcorral.Habiaalliun escandalo espantoso,pues dosfamilias seestaban ·o esunpavo,porcierto-dijolapataFjensenlalancaconquenadanlrechoqueemantieneindudaqu uno de mis pequenitos.Ysi unolo mira bien,se da cuenta pronto deque es realmente muy guapo.Cuac,cuac!Vamos,venganconmigoydejenme ensenarleselmundo presentarloslorralnterernseseparenmucheminseaquelspisteen andenconlosjosmuyabiertosorsivienelat. Yconestoseencaminaronalcorral.Habia alliunescandaloespantoso,pues dosfamilias se estaban \n\nFigure 10: We do not specifically introduce additional OCR capabilities for GOT other than Chinese and English. Yet the PDF data we crawled may contain a small amount of text in other languages, leading to the GOT seeming to have the ability to recognize other languages. However, we cannot guarantee the OCR quality of other languages. Therefore, we recommend fine-tuning the model with corresponding data if this feature is needed."
    },
    {
        "page_idx": 16,
        "text": "References   \n[1] Casia-hwdb2-line. https://huggingface.co/datasets/Teklia/CASIA-HWDB2-line (2024) 6   \n[2] Iam-line. https://huggingface.co/datasets/Teklia/IAM-line (2024) 6   \n[3] Norhand-v3-line. https://huggingface.co/datasets/Teklia/NorHand-v3-line (2024) 6   \n[4] Bai, J., Bai, S., Chu, Y., Cui, Z., Dang, K., Deng, X., Fan, Y., Ge, W., Han, Y., Huang, F., Hui, B., Ji, L., Li, M., Lin, J., Lin, R., Liu, D., Liu, G., Lu, C., Lu, K., Ma, J., Men, R., Ren, X., Ren, X., Tan, C., Tan, S., Tu, J., Wang, P., Wang, S., Wang, W., Wu, S., Xu, B., Xu, J., Yang, A., Yang, H., Yang, J., Yang, S., Yao, Y., Yu, B., Yuan, H., Yuan, Z., Zhang, J., Zhang, X., Zhang, Y., Zhang, Z., Zhou, C., Zhou, J., Zhou, X., Zhu, T.: Qwen technical report. arXiv preprint arXiv:2309.16609 (2023) 6   \n[5] Bai, J., Bai, S., Yang, S., Wang, S., Tan, S., Wang, P., Lin, J., Zhou, C., Zhou, J.: Qwen-vl: A versatile visionlanguage model for understanding, localization, text reading, and beyond. arXiv preprint arXiv:2308.12966 (2023) 1, 4, 9, 10   \n[6] Blecher, L., Cucurull, G., Scialom, T., Stojnic, R.: Nougat: Neural optical understanding for academic documents. arXiv preprint arXiv:2308.13418 (2023) 4, 6, 8, 9   \n[7] Calvo-Zaragoza, J., Jr, J.H., Pacha, A.: Understanding optical music recognition. ACM Computing Surveys (CSUR) 53(4), 1–35 (2020) 7   \n[8] Chen, J., Kong, L., Wei, H., Liu, C., Ge, Z., Zhao, L., Sun, J., Han, C., Zhang, X.: Onechart: Purify the chart structural extraction via one auxiliary token. arXiv preprint arXiv:2404.09987 (2024) 7, 10   \n[9] Chen, Z., Wang, W., Tian, H., Ye, S., Gao, Z., Cui, E., Tong, W., Hu, K., Luo, J., Ma, Z., et al.: How far are we to gpt-4v? closing the gap to commercial multimodal models with open-source suites. arXiv preprint arXiv:2404.16821 (2024) 1, 3, 4, 8, 9   \n[10] Du, Y., Li, C., Guo, R., Cui, C., Liu, W., Zhou, J., Lu, B., Yang, Y., Liu, Q., Hu, X., et al.: Pp-ocrv2: Bag of tricks for ultra lightweight ocr system. arXiv preprint arXiv:2109.03144 (2021) 1, 4, 5   \n[11] Graves, A., Fernández, S., Gomez, F., Schmidhuber, J.: Connectionist temporal classification: Labelling unsegmented sequence data with recurrent neural networks. In: International Conference on Machine Learning (ICML) (2006) 4   \n[12] Gu, J., Meng, X., Lu, G., Hou, L., Minzhe, N., Liang, X., Yao, L., Huang, R., Zhang, W., Jiang, X., et al.: Wukong: A 100 million large-scale chinese cross-modal pre-training benchmark. Advances in Neural Information Processing Systems 35, 26418–26431 (2022) 5   \n[13] Hu, A., Xu, H., Ye, J., Yan, M., Zhang, L., Zhang, B., Li, C., Zhang, J., Jin, Q., Huang, F., et al.: mplug-docowl 1.5: Unified structure learning for ocr-free document understanding. arXiv preprint arXiv:2403.12895 (2024) 9, 10   \n[14] LeCun, Y., Bottou, L., Bengio, Y., Haffner, P.: Gradient-based learning applied to document recognition. Proceedings of the IEEE 86(11), 2278–2324 (1998) 4   \n[15] Li, J., Li, D., Savarese, S., Hoi, S.: Blip-2: Bootstrapping language-image pre-training with frozen image encoders and large language models. arXiv preprint arXiv:2301.12597 (2023) 3   \n[16] Li, M., Lv, T., Chen, J., Cui, L., Lu, Y., Florencio, D., Zhang, C., Li, Z., Wei, F.: Trocr: Transformerbased optical character recognition with pre-trained models. In: Proceedings of the AAAI Conference on Artificial Intelligence. vol. 37, pp. 13094–13102 (2023) 4   \n[17] Li, Y., Mao, H., Girshick, R., He, K.: Exploring plain vision transformer backbones for object detection. In: European conference on computer vision. pp. 280–296. Springer (2022) 5   \n[18] Liao, M., Shi, B., Bai, X., Wang, C., Lu, T., Mei, T.: Textboxes: A fast text detector with a single deep neural network. In: Proceedings of the Thirty-First AAAI Conference on Artificial Intelligence (2017) 4   \n[19] Liao, M., Zou, Z., Wan, Z., Yao, C., Bai, X.: Real-time scene text detection with differentiable binarization and adaptive scale fusion. IEEE transactions on pattern analysis and machine intelligence 45(1), 919–931 (2022) 4   \n[20] Liu, C., Wei, H., Chen, J., Kong, L., Ge, Z., Zhu, Z., Zhao, L., Sun, J., Han, C., Zhang, X.: Focus anywhere for fine-grained multi-page document understanding. arXiv preprint arXiv:2405.14295 (2024) 4, 8, 9, 10   \n[21] Liu, C., Wei, H., Yang, J., Liu, J., Li, W., Guo, Y., Fang, L.: Gigahumandet: Exploring full-body detection on gigapixel-level images. In: Proceedings of the AAAI Conference on Artificial Intelligence. vol. 38, pp. 10092–10100 (2024) 14   \n[22] Liu, F., Eisenschlos, J.M., Piccinno, F., Krichene, S., Pang, C., Lee, K., Joshi, M., Chen, W., Collier, N., Altun, Y.: Deplot: One-shot visual language reasoning by plot-to-table translation. In: Findings of the 61st Annual Meeting of the Association for Computational Linguistics (2023), https://arxiv.org/abs/ 2212.10505 10   \n[23] Liu, H., Li, C., Li, Y., Li, B., Zhang, Y., Shen, S., Lee, Y.J.: Llava-next: Improved reasoning, ocr, and world knowledge (January 2024), https://llava-vl.github.io/blog/2024-01-30-llava-next/ 3, 9   \n[24] Liu, H., Li, C., Wu, Q., Lee, Y.J.: Visual instruction tuning (2023) 1, 3, 4   \n[25] Liu, X., Zhang, R., Zhou, Y., Jiang, Q., Song, Q., Li, N., Zhou, K., Wang, L., Wang, D., Liao, M., et al.: Icdar 2019 robust reading challenge on reading chinese text on signboard. arXiv preprint arXiv:1912.09641 (2019) 8   \n[26] Liu, Y., Jin, L., Zhang, S., Luo, C., Zhang, S.: Curved scene text detection via transverse and longitudinal sequence connection. Pattern Recognition 90, 337–345 (2019) 4   \n[27] Liu, Y., Yang, B., Liu, Q., Li, Z., Ma, Z., Zhang, S., Bai, X.: Textmonkey: An ocr-free large multimodal model for understanding document. arXiv preprint arXiv:2403.04473 (2024) 1, 3, 4, 9   \n[28] Loshchilov, I., Hutter, F.: Sgdr: Stochastic gradient descent with warm restarts. arXiv preprint arXiv:1608.03983 (2016) 8   \n[29] Loshchilov, I., Hutter, F.: Decoupled weight decay regularization. In: ICLR (2019) 8   \n[30] Lyu, P., Yao, C., Wu, W., Yan, S., Bai, X.: Multi-oriented scene text detection via corner localization and region segmentation. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 7553–7563 (2018) 4   \n[31] Masry, A., Kavehzadeh, P., Do, X.L., Hoque, E., Joty, S.: Unichart: A universal vision-language pretrained model for chart comprehension and reasoning. arXiv preprint arXiv:2305.14761 (2023) 10   \n[32] Masry, A., Long, D.X., Tan, J.Q., Joty, S., Hoque, E.: Chartqa: A benchmark for question answering about charts with visual and logical reasoning. arXiv preprint arXiv:2203.10244 (2022) 10   \n[33] Mathew, M., Karatzas, D., Jawahar, C.: Docvqa: A dataset for vqa on document images. In: Proceedings of the IEEE/CVF winter conference on applications of computer vision. pp. 2200–2209 (2021) 3   \n[34] Mertz, A., Slough, W.: Graphics with tikz. The PracTEX Journal 1, 1–22 (2007) 7   \n[35] Methani, N., Ganguly, P., Khapra, M.M., Kumar, P.: Plotqa: Reasoning over scientific plots. In: Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision. pp. 1527–1536 (2020) 10   \n[36] OpenAI: Gpt-4 technical report (2023) 1, 10   \n[37] Radford, A., Kim, J.W., Hallacy, C., Ramesh, A., Goh, G., Agarwal, S., Sastry, G., Askell, A., Mishkin, P., Clark, J., et al.: Learning transferable visual models from natural language supervision. In: International conference on machine learning. pp. 8748–8763. PMLR (2021) 1, 4   \n[38] Ríos-Vila, A., Calvo-Zaragoza, J., Paquet, T.: Sheet music transformer: End-to-end optical music recognition beyond monophonic transcription. arXiv preprint arXiv:2402.07596 (2024) 7   \n[39] Ríos-Vila, A., Rizo, D., Iñesta, J.M., Calvo-Zaragoza, J.: End-to-end optical music recognition for pianoform sheet music. International Journal on Document Analysis and Recognition (IJDAR) 26(3), 347–362 (2023) 7   \n[40] Schuhmann, C., Beaumont, R., Vencu, R., Gordon, C., Wightman, R., Cherti, M., Coombes, T., Katta, A., Mullis, C., Wortsman, M., et al.: Laion-5b: An open large-scale dataset for training next generation image-text models. Advances in Neural Information Processing Systems 35, 25278–25294 (2022) 5   \n[41] Shi, B., Yao, C., Liao, M., Yang, M., Xu, P., Cui, L., Belongie, S., Lu, S., Bai, X.: Icdar2017 competition on reading chinese text in the wild (rctw-17). In: 2017 14th iapr international conference on document analysis and recognition (ICDAR). vol. 1, pp. 1429–1434. IEEE (2017) 8   \n[42] Singh, A., Natarajan, V., Shah, M., Jiang, Y., Chen, X., Batra, D., Parikh, D., Rohrbach, M.: Towards vqa models that can read. In: Proceedings of the IEEE/CVF conference on computer vision and pattern recognition. pp. 8317–8326 (2019) 3   \n[43] Tian, Z., Huang, W., He, T., He, P., Qiao, Y.: Detecting text in natural image with connectionist text proposal network. In: European conference on computer vision. pp. 56–72. Springer (2016) 4   \n[44] Veit, A., Matera, T., Neumann, L., Matas, J., Belongie, S.: Coco-text: Dataset and benchmark for text detection and recognition in natural images. arXiv preprint arXiv:1601.07140 (2016) 8   \n[45] Wang, Y., Xie, H., Zha, Z.J., Xing, M., Fu, Z., Zhang, Y.: Contournet: Taking a further step toward accurate arbitrary-shaped scene text detection. In: Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. pp. 11753–11762 (2020) 4   \n[46] Wei, H., Kong, L., Chen, J., Zhao, L., Ge, Z., Yang, J., Sun, J., Han, C., Zhang, X.: Vary: Scaling up the vision vocabulary for large vision-language models. arXiv preprint arXiv:2312.06109 (2023) 1, 4, 5, 6, 9   \n[47] Wei, H., Kong, L., Chen, J., Zhao, L., Ge, Z., Yu, E., Sun, J., Han, C., Zhang, X.: Small language model meets with reinforced vision vocabulary. arXiv preprint arXiv:2401.12503 (2024) 6, 9   \n[48] Xia, R., Zhang, B., Ye, H., Yan, X., Liu, Q., Zhou, H., Chen, Z., Dou, M., Shi, B., Yan, J., Qiao, Y.: Chartx & chartvlm: A versatile benchmark and foundation model for complicated chart reasoning (2024) 10   \n[49] Ye, J., Hu, A., Xu, H., Ye, Q., Yan, M., Dan, Y., Zhao, C., Xu, G., Li, C., Tian, J., et al.: mplugdocowl: Modularized multimodal large language model for document understanding. arXiv preprint arXiv:2307.02499 (2023) 1, 3, 4   \n[50] Ye, J., Hu, A., Xu, H., Ye, Q., Yan, M., Xu, G., Li, C., Tian, J., Qian, Q., Zhang, J., et al.: Ureader: Universal ocr-free visually-situated language understanding with multimodal large language model. arXiv preprint arXiv:2310.05126 (2023) 3, 4, 9   \n[51] Zhang, C., Peng, G., Tao, Y., Fu, F., Jiang, W., Almpanidis, G., Chen, K.: Shopsign: A diverse scene text dataset of chinese shop signs in street views. arXiv preprint arXiv:1903.10412 (2019) 8   \n[52] Zhang, S.X., Zhu, X., Yang, C., Wang, H., Yin, X.C.: Adaptive boundary proposal network for arbitrary shape text detection. In: Proceedings of the IEEE/CVF International Conference on Computer Vision. pp. 1305–1314 (2021) 4   \n[53] Zhang, S., Roller, S., Goyal, N., Artetxe, M., Chen, M., Chen, S., Dewan, C., Diab, M., Li, X., Lin, X.V., et al.: Opt: Open pre-trained transformer language models. arXiv preprint arXiv:2205.01068 (2022) 5   \n[54] Zhong, X., Tang, J., Yepes, A.J.: Publaynet: largest dataset ever for document layout analysis. In: 2019 International conference on document analysis and recognition (ICDAR). pp. 1015–1022. IEEE (2019) 4   \n[55] Zhou, X., Yao, C., Wen, H., Wang, Y., Zhou, S., He, W., Liang, J.: East: An efficient and accurate scene text detector. In: Proceedings of the IEEE International Conference on Computer Vision (ICCV) (2017) 4"
    },
    {
        "page_idx": 17,
        "text": ""
    },
    {
        "page_idx": 18,
        "text": ""
    }
]