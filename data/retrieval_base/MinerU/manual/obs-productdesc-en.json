[
    {
        "page_idx": 0,
        "text": "# \n# \nIssue 26   \nDate 2024-02-28"
    },
    {
        "page_idx": 1,
        "text": "# \nNo part of this document may be reproduced or transmitted in any form or by any means without prior written consent of Huawei Technologies Co., Ltd. \n# \nand other Huawei trademarks are trademarks of Huawei Technologies Co., Ltd. All other trademarks and trade names mentioned in this document are the property of their respective holders. \n# \nThe purchased products, services and features are stipulated by the contract made between Huawei and the customer. All or part of the products, services and features described in this document may not be within the purchase scope or the usage scope. Unless otherwise specified in the contract, all statements, information, and recommendations in this document are provided \"AS IS\" without warranties, guarantees or representations of any kind, either express or implied. \nThe information in this document is subject to change without notice. Every effort has been made in the preparation of this document to ensure accuracy of the contents, but all statements, information, and recommendations in this document do not constitute a warranty of any kind, express or implied."
    },
    {
        "page_idx": 2,
        "text": "# \n# \nHuawei's regulations on product vulnerability management are subject to the Vul. Response Process. For   \ndetails about this process, visit the following web page:   \nhttps://www.huawei.com/en/psirt/vul-response-process   \nFor vulnerability information, enterprise customers can visit the following web page:   \nhttps://securitybulletin.huawei.com/enterprise/en/security-advisory"
    },
    {
        "page_idx": 3,
        "text": "1 About OBS.   \n2 Advantages....... 6   \n3 Application Scenarios. 10   \n4 Functions.. 19   \n5 Security.. 27   \n5.1 Shared Responsibilities. .27   \n5.2 Identity Authentication and Access Control.. 28   \n5.3 Data Protection.. 29   \n5.4 Audit and Logging.. 31   \n5.5 Resilience.. 32   \n5.6 Risk Monitoring. 33   \n5.7 Certificates. .33   \n6 Permissions Management.. 35   \n7 Restrictions and Limitations. .43   \n8 Related Services.... .49   \n9 Basic Concepts. .51   \n9.1 Objects.. 51   \n9.2 Buckets.. 52   \n9.3 Parallel File System.. ..  5533   \n9.4 Access Keys (AK/SK).   \n9.5 Endpoints and Domain Names.. 54   \n9.6 Region and AZ.. 56 \n#"
    },
    {
        "page_idx": 4,
        "text": "# \nObject Storage Service (OBS) is a scalable service that provides secure, reliable, and cost-effective cloud storage for massive amounts of data. \nOBS provides unlimited storage capacity for objects of any format, catering to the needs of common users, websites, enterprises, and developers. There is no limitation on the storage capacity of the entire OBS system or of a single bucket, and any number of objects can be stored. As a web service, OBS supports APIs over Hypertext Transfer Protocol (HTTP) and Hypertext Transfer Protocol Secure (HTTPS). You can use OBS Console or OBS tools to access and manage data stored in OBS anytime, anywhere. With OBS SDKs and APIs, you can easily manage data stored in OBS and develop upper-layer applications. \nHuawei Cloud deploys OBS infrastructures in multiple regions across the globe, delivering high scalability and reliability. You can deploy OBS in specific regions for faster access at an affordable price. \n# \nOBS basically consists of buckets and objects. \nA bucket is a container for storing objects in OBS. Each bucket is specific to a region and has specific storage class and access permissions. A bucket is accessible through its access domain name over the Internet. \nAn object is the fundamental storage unit in OBS. An object consists of the following: \nA key that specifies the name of an object. An object key is a UTF-8 string up   \nto 1,024 characters long. Each object is uniquely identified by a key within a   \nbucket.   \nMetadata that describes an object. The metadata is a set of key-value pairs   \nthat are assigned to objects stored in OBS. There are two types of metadata:   \nsystem-defined metadata and custom metadata. System-defined metadata is automatically assigned by OBS for processing objects. Such metadata includes Date, Content-Length, Last-Modified, ETag, and more."
    },
    {
        "page_idx": 5,
        "text": "You can specify custom metadata to describe the object when you upload an object to OBS. \nData that refers to the content of an object. \nBy means of secondary development based on OBS REST APIs, OBS Console, SDKs, and a variety of tools are provided for you to use OBS. You can also use OBS SDKs and APIs to develop applications customized for your business needs. \nFigure 1-1 Product architecture \n# \nOBS offers the storage classes below to meet your requirements for storage performance and costs. You can change buckets and objects between storage classes. To learn billing for different storage classes, see Storage Space. \nStandard: The Standard storage class features low latency and high   \nthroughput. It is therefore good for storing frequently (multiple times per month) accessed files or small files (less than 1 MB). Its application scenarios include big data analytics, mobile apps, hot videos, and social apps.   \nInfrequent Access: The Infrequent Access storage class is for storing data that is infrequently (less than 12 times per year) accessed, but when needed, the access has to be fast. It can be used for file synchronization, file sharing, enterprise backups, and many other scenarios. This storage class has the same durability, low latency, and high throughput as the Standard storage class, with a lower cost, but its availability is slightly lower than the Standard storage class.   \nArchive: The Archive storage class is ideal for storing data that is rarely (once per year) accessed. Its application scenarios include data archive and longterm backups. This storage class is secure, durable, and inexpensive, so it can be used to replace tape libraries. To keep cost low, it may take hours to restore data from the Archive storage class."
    },
    {
        "page_idx": 6,
        "text": "Deep Archive: The Deep Archive storage class (under limited beta testing) is suitable for storing data that is barely (once every few years) accessed. This storage class costs less than the Archive storage class, but takes longer time (usually several hours) to restore data. \nAn object uploaded to a bucket inherits the storage class of the bucket by default.   \nYou can also specify a storage class for an object when you upload it. \nChanging the storage class of a bucket does not change the storage classes of existing objects in the bucket, but newly uploaded objects will inherit the new storage class. \nTable 1-1 Comparison between storage classes \n\\begin{tabular}{lllll}\nCompared Item & Standard & Infrequent Access & Archive & Deep Archive (Under Limited Beta Testing) \\\\\nFeature & Top-notch performance , high reliability and availability & Reliable, inexpensive storage with real-time access & Long-term retention of archived data at a low cost & Lower price than the Archive storage class for long-term data archive. \\\\\nApplication scenarios & pnop application, data sharing, content sharing, and hot data storage & Web disk applications, enterprise backup, active archiving, and data monitoring & Archive, medical image storage, video material storage, and replacement of tape libraries & Archiving data that is barely accessed. \\\\\nDesigned durability & 99.99999999 9% & 99.999999999 % & 99.999999999 % & 99.999999999 % \\\\\nDesigned durability (multi-AZ) & 99.99999999 99% & 99.999999999 9% & Multi-AZ not supported & Multi-AZ not supported \\\\\nDesigned availability & 99.99% & 99% & 99% & 99% \\\\\nDesigned availability (multi-AZ) & 99.995% & 99.5% & Multi-AZ not supported & Multi-AZ not supported \\\\\nMinimum storage duration & N/A & 30 days & 90 days & 180 days \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 7,
        "text": "\\begin{tabular}{lllll}\nCompared Item & Standard & Infrequent Access & Archive & Deep Archive (Under Limited Beta Testing) \\\\\nMinimum measurement unita & 64 KB & 64 KB & 64 KB & 64KB \\\\\nData restore & N/A & Billed for each GB restored. & Data can be restored at a standard or an expedited speed. Billed for each GB restored. & Data can be restored at a standard or an expedited speed. Billed for each GB restored. \\\\\nImage processing & Supported & Supported & Not supported & Not supported \\\\\n\\end{tabular}\n\n\n# \nMinimum storage duration refers to the least time that will be charged for object storage. This means that objects will be charged for a minimum storage duration even if they are not stored for that long. For instance, if an Infrequent Access object is stored in OBS for 20 days (shorter than the minimum storage duration of 30 days) and then deleted, you will be billed for a storage duration of 30 days. \n# \nOBS provides various resource management tools. You can use any of the tools listed in Table 1-2 to access and manage resources in OBS. \nTable 1-2 OBS resource management tools \n\\begin{tabular}{lll}\nTool & Description & How to Use \\\\\nOBS Console & OBS Console is a web-based GUl for you to easily manage OBS resources. & Console OperationGuide \\\\\nOBSBroWser (abandoned) & OBS Browser has been abandoned since April 15, 2020. Its functions are inherited by the new client tool OBS Browser+ that provides you with better user experience. Download the latest OBS Browser+.We apologize for any inconvenience and appreciate your understanding. \\\\\nOBSBrowser + & OBSBrowser+is aWindows clientthatlets you easily manage OBS resources from your desktop. & OBSBrowser+ ToolGuide \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 8,
        "text": "\\begin{tabular}{lll}\nTool & Description & How to Use \\\\\nobsutil & obsutil is a command line tool for you to perform common configuration and management operations on OBs. If you are comfortable using the command line interface (CLl), obsutil is recommended for batch processing and automated tasks. & obsutil Tool Guide \\\\\nobsfs & obsfs is an OBS tool based on Filesystem in Userspace (FUSE). It helps you mount parallel file systems to Linux, so that you can easily access virtually unlimited storage space of OBS the same way as you would use a regular local file system. & obsfs Tool Guide \\\\\nSDKs & OBS SDKs encapsulate the REST API provided by OBS to simplify development. You can call API functions provided by the OBS SDKs to enjoy OBS capabilities. & SDK Reference \\\\\nAPIs & OBS offers the REST API for you to access it from web applications with ease. By making APl calls, you can upload and download data anytime, anywhere over the Internet. & APIReference \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 9,
        "text": "# \n# \nIn this information era, it becomes increasingly difficult for conventional onpremises storage servers to deal with the fast-growing data of enterprises. Table 2-1 compares OBS with on-premises storage servers. \nTable 2-1 Comparison between OBS and on-premises storage servers \n\\begin{tabular}{lll}\nItem & OBS & On-Premises Storage Server \\\\\nStorage capacity & OBS provides unlimited storage capacity, with data centers deployed across the world. All services and storage nodes are deployed in distributed clusters. You can expand each node or cluster separately, and you never have to worry about running out of space. & Such servers provide confined storage space due to the limited capacity of the hardware devices they use. When the storage space is not sufficient, you need to buy extra disks for manual expansion. \\\\\nSecurity & OBS uses HTTPS and SSL protocols and encrypts data during uploads. To keep data in transit and at rest safe, OBS uses access key IDs (AKs) and secret access keys (SKs) to authenticate user identities and adopts a range of approaches including IAM permissions, bucket policies, access control lists (ACLs), and uniform resource locator (URL) validation. & The owner and users are exposed to security risks from cyber attacks, technical vulnerabilities, and accidental operations. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 10,
        "text": "\\begin{tabular}{lll}\nItem & OBS & On-Premises Storage Server \\\\\nReliability & The OBS five-level reliability architecture ensures up to 99.9999999999% of durability and up to 99.995% of continuity, much higher than those of the conventional architecture. & Due to limited investment, on- premises storage servers cannot ensure reliability at all levels of media, servers, cabinets, data centers, and regions. Once there is a failure or disaster, it may cause irreversible data loss to enterprises. \\\\\nCosts & OBS is an out-of-the-box service that has no initial capital investment or time or labor costs and frees you from O\\&M. You only need to pay as you go. OBS offers tiered-pricing, meaning the more you use, the more you will save. & The initial deployment of on- premises servers requires high investments and a long construction period, but it quickly lags behind as enterprise businesses change so fast. Additionalexpenditures are required to ensure security. \\\\\n\\end{tabular}\n\n\n# \nData durability and service continuity: OBS provides storage for cloud albums of Huawei mobile phones to support access of hundreds of millions of users. It delivers a data durability of up to 99.9999999999% and service continuity of up to $99.995\\%$ by using cross-region replication, cross-AZ disaster recovery, device and data redundancy in an AZ, slow disk or bad sector detection, and other technologies."
    },
    {
        "page_idx": 11,
        "text": "Figure 2-1 Five-level reliability architecture of OBS \nMulti-level protection and authorization management: OBS has passed the Trusted Cloud Service (TRUCS) certification. Measures, including versioning, server-side encryption, URL validation, virtual private cloud (VPC)- based network isolation, access log audit, and fine-grained access control are provided to keep data secure and trusted. \nHighly concurrent access for hundreds of billions of objects: With intelligent scheduling and response, optimized access paths, and technologies such as transmission acceleration and big data vertical optimization, you can store hundreds of billions of objects in OBS and still experience smooth concurrent access with ultra-high bandwidth and low latency."
    },
    {
        "page_idx": 12,
        "text": "Figure 2-2 Access to numerous objects at high-level concurrency \nEasy use and management: OBS provides standard REST APIs, SDKs in different programming languages, and data migration tools to help you quickly move your workloads to cloud. Storage resources are linearly, infinitely scalable, without compromising performance. You do not have to plan storage capacity beforehand or worry about expansion or reduction. When needed, you can ask Huawei Cloud to perform online upgrade or capacity expansion on your behalf. Tiered storage and on-demand use: Both pay-per-use and yearly/monthly billing are available for OBS. Data in each of the Deep Archive (under limited beta testing), Archive, Infrequent Access, and Standard storage classes is separately metered and billed, which reduces storage costs."
    },
    {
        "page_idx": 13,
        "text": "# \n# \n# \nOBS enables inexpensive big data solutions that feature high performance with zero service interruptions. It eliminates the need for capacity expansion. Such solutions are designed for scenarios that involve mass data storage and analysis, query of historical data details, analysis of numerous behavior logs, and statistical analysis of public transactions. \n● Mass data storage and analysis: storage of petabytes of data, batch data analysis, and data query in milliseconds Query of historical data details: account statement audit, analysis on device energy consumption history, playback of trails, analysis on vehicle driving behavior, and refined monitoring   \n● Analysis of numerous behavior logs: analysis of learning habits and logs Statistical analysis on public transactions: crime tracking, associated case queries, traffic congestion analysis, and scenic spot popularity statistics \nYou can migrate data to OBS with Data Express Service (DES), and then use Huawei Cloud big data services like MapReduce Service (MRS) or open-source computing frameworks such as Hadoop and Spark to analyze data stored in OBS. Such analysis results will be returned to your programs or applications on Elastic Cloud Servers (ECSs). \n# \nMRS, ECS, and DES"
    },
    {
        "page_idx": 14,
        "text": "Figure 3-1 Big data analytics \n# \n# \nOBS provides a website hosting function that is cost-effective, highly available, and scalable to traffic changes. By combining the OBS static website hosting, CDN, and ECS, you can quickly build a website or an application system with separate static and dynamic content. \nThe dynamic data on end user browsers and apps directly interacts with the service systems deployed on Huawei Cloud. Requests for dynamic data are sent to service systems for processing and then returned to end users. The static data is stored in OBS. Business systems can process static data over the intranet. End users directly request and read the static data from OBS through nearby highspeed nodes. \n# \nContent Delivery Network (CDN) and Elastic Cloud Server (ECS)"
    },
    {
        "page_idx": 15,
        "text": "Figure 3-2 Static website hosting \n# \n# \nThe OBS storage system is scalable, highly reliable, and cost-effective, featuring high concurrency and low latency. Working with the MPC, Content Moderation, and CDN services, OBS can help you quickly construct a fast, secure, and highly available online VOD platform. \nOBS serves as the origin server of VOD services. Normal Internet users or professional content creators can upload their video files to OBS, use Content Moderation to review video content, and use MPC to transcode source video files. The processed video content then is played on devices after CDN acceleration. \n# \nContent delivery network (CDN), Media Processing Center (MPC), and Content Moderation"
    },
    {
        "page_idx": 16,
        "text": "Figure 3-3 VOD \n# \n# \nOBS is a reliable, cost-effective system for storing massive amounts of data and features high concurrency and low latency. It works with compute services on Huawei Cloud to help you easily build a DNA sequencing platform. \nYou can use Direct Connect to automatically upload data from the sequencer in your data center to Huawei Cloud. You can then perform data analysis on the compute cluster (including ECS, CCE, and MRS services), and the analysis results will be stored in OBS. After an analysis is completed, the source DNA data will be automatically stored in the Archive storage class in OBS, and the sequencing results can be distributed to hospitals and scientific research institutes over the Internet. \n# \nElastic Cloud Server (ECS), Bare Metal Server (BMS), MapReduce Service (MRS), Cloud Container Engine (CCE), and Direct Connect (DC)"
    },
    {
        "page_idx": 17,
        "text": "Figure 3-4 DNA sequencing \n# \n# \nOBS provides reliable, inexpensive storage for virtually any amount of data. It has high performance and low latency and offers end-to-end solutions that cover device management, video surveillance, video processing, and more. Such solutions are ideal for individuals and enterprises alike. \nYou can upload surveillance videos in cameras to Huawei Cloud over the Internet or using a Direct Connect connection. Video files on the processing platform consisting of ECS and ELB are segmented and then stored into OBS. Later, you can download the video segments from OBS to play them on terminals. Video files stored in OBS can also be backed up using Cross-Region Replication, improving storage security and reliability. \n# \nElastic Load Balance (ELB) and Elastic Cloud Server (ECS)"
    },
    {
        "page_idx": 18,
        "text": "Figure 3-5 Video surveillance \n# \n# \nOBS offers a highly reliable, inexpensive storage system featuring high concurrency and low latency. It can hold massive amounts of data, meeting the archive needs for unstructured data of applications and databases. \nYou can use the synchronization clients (such as OBS Browser+ and obsutil), Cloud Storage Gateway (CSG), DES, or mainstream backup software to back up your onpremises data to OBS. OBS also provides lifecycle rules to automatically transition objects between storage classes to save your money on storage. You can restore data from OBS to a DR or test host on the cloud. \nSynchronization clients: good for manual backup of a single database or program   \nBackup software: applicable to automatic backup for multiple applications or hosts, delivering strong compatibility   \nCSG: seamlessly compatible with on-premises backup systems   \nDES: ideal for archiving massive volumes of data. It transfers data using Teleport devices and disks to cloud. \n# \nData Express Service (DES) and Elastic Cloud Server (ECS)"
    },
    {
        "page_idx": 19,
        "text": "Figure 3-6 Backup and archiving \n# \n# \nOBS works with cloud services such as ECS, AS, EVS, IMS, IAM, and Cloud Eye to provide reliable high-performance computing (HPC) solutions. These solutions have huge capacity and large single-stream bandwidth. \nIn HPC scenarios, enterprises can directly upload data to OBS or migrate data to OBS by using DES. The POSIX and HDFS of OBS allow you to mount buckets to HPC flavor nodes, as well as big data and AI applications. This facilitates highperformance computing by providing efficient and convenient data, write, and storage capabilities. \n# \nData Express Service (DES), Elastic Cloud Server (ECS), Auto Scaling (AS), Image Management Service (IMS), Cloud Eye, and Identity and Access Management (IAM)"
    },
    {
        "page_idx": 20,
        "text": "Figure 3-7 High-performance computing \n# \n# \nOBS works with cloud services such as ECS, ELB, RDS, and VBS to provide enterprise web disks with a reliable, inexpensive storage system featuring low latency and high concurrency. The storage capacity automatically scales as the volume of stored data grows. \nDynamic data on devices such as mobile phones, PCs, and tablets interacts with the enterprise cloud disk service system built on Huawei Cloud. Requests for dynamic data are sent to the service system for processing and then returned to devices, and the static data is stored in OBS. Service systems can process static data over the intranet. End users can directly request and read the static data from OBS. In addition, OBS provides the lifecycle management function to automatically change storage classes for objects, reducing storage costs. \n# \nElastic Cloud Server (ECS), Elastic Load Balance (ELB), Relational Database Service (RDS), and Volume Backup Service (VBS)"
    },
    {
        "page_idx": 21,
        "text": "Figure 3-8 Enterprise cloud boxes (web disks)"
    },
    {
        "page_idx": 22,
        "text": "Table 4-1 lists the basic functions of OBS. \nIt is recommended that you get familiar with the basic concepts of OBS before using OBS. \nTable 4-1 OBS functions \n\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit & OBS 2.0 & OBS 3.0 \\\\\nclasses & storage classes: Standard, Infrequent Access, Archive, and Deep Archive (under limited beta testing), to meet different requirements for storage performance and cost. & (Deep Archive storage is nowunder limited beta testing and is only & (Deep Archive storage is currently not available for OBS 2.0.) \\\\\nent & provides easy bucket management. You can convenientlycreate,list, search for, view, and delete \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 23,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nObject managem ent & Objects are the fundamental entities stored in OBS.You can perform the following operations on objects: upload, download, listing, searching, resumable transfer, and multipart uploads. & All & Supported & Supported \\\\\nPermissio n managem ent & OBS uses IAM permissions, bucket policies, object policies, and ACLs for access control. You can grant access to different accounts and users, and also configure policies or ACLs for buckets and objects to control read and write permissions for them. & All & Supported & Supported \\\\\nServer- side encryptio n & To enhance data security, OBS uses server-side encryption to encrypt data before storing it. The encryption methods include SSE-KMS, SSE-OBS, and SSE-C. & See Function Overview. NOTE To find out the regions that support SSE-KMS or SSE- OBS,see Server- Side Encryptio & Supported & Supported \\\\\nWORM & You can use a write-once- read-many (wORM) model to protect objects from being deleted or tampered with within a specified period. & n. See Function Overview. & Not supported & Supported \\\\\nLifecycle managem ent & You can configure lifecycle rules to automatically delete objects or transition objects between storage classes. & All & Supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 24,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nStatic website hosting CORS & You can upload static website files to your OBS bucket, grant the read permission for these files to anonymous users, and configure static website hosting for the bucket to host them. Cross-origin resource & All All & Supported Supported & Supported Supported \\\\\n & sharing (CORS) is a browser-standard mechanism defined by the WorldWideWeb Consortium (W3C). It allows a web client in one origin to interact with resources in another one. For general web page requests, website scripts and contents in one origin cannot interact with those in another because of Same Origin Policies (SOPs). OBS supports CORS rules for resources in it to be \\\\\nURL validation & accessed across origins. URL validation protects your data in OBS from being stolen using the Referer field in HTTP requests. Such authorization is controlled using whitelists and blacklists. & All & Supported & Supported \\\\\nBucket tags & Tags are provided for you to identify and classify OBS buckets. If you add tags to a bucket, charging data records (CDRs) generated for it will be labeled with these tags. You can classify CDRs by tag for cost analysis. & All & Supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 25,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nUser- defined domain names & You can bind a domain name to an OBS bucket and then use this domain name to access data in the bucket. For instance, if you need to migrate files from a websitetoOBSwhile keeping the website address unchanged, you can bind the website domain name to an OBS bucket. & All & Not supported & Supported \\\\\nCross- region replicatio n & You can create a cross- region replication rule to automatically, asynchronously replicate objects from a source bucket in one region to a destination bucket in another region, as long as both buckets are under your account. This enables cross-region data disaster recovery, catering to your & All & Not supported & Supported \\\\\nImage processin 6 & needs for remote backup. You can this function to quickly process images stored in OBS, including compression, cropping, resizing, watermarking, and format conversion. & See Function Overview. & Not supported & Supported \\\\\nBucket inventorie & Bucket inventories help you manage objects. You can configure a bucket inventory rule for OBS to periodically scan the specified objects, list the objects with their properties (such as metadata, size, modification time, and storage class) in CsV files, and store the files into the specified bucket. & See Function Overview. & Not supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 26,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nParallel file systems & Parallel File System (PFS) is a high-performance file system with access latency in milliseconds. It supports TB/s-level bandwidth and millions of IOPS, which is ideal for processing high- performance computing (HPC) workloads. You can call standard OBS APIs to read data in a parallel file system, or use obsfs, an OBS tool, to mount a parallel file system to a Linux server in the cloud. Migrating files and directories in a parallel file system is just like operating & See Function Overview. & Not supported & Supported \\\\\nLogging & a local file system. With logging, you can obtain the bucket access data. After logging is enabled for a bucket, OBS automatically logs every access request for the bucket, packs multiple log records into a log file, and saves the log file to the specified bucket. Using the stored logs, you can analyze or audit logs. & All & Supported & Supported \\\\\nVersionin g & When versioning is enabled for a bucket, OBS can keep multiple versions of an object in the bucket. That way you can quickly retrieve and restore every object version as needed, or recover data from both accidental actions and application failures. & All & Supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 27,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nAppendin g objects & You can call the AppendObject API to write additional data to an appendable object in a specified bucket. Objects created by calling the AppendObject API are appendable, while those created by calling the PutObject APl are normal ones. & See Function Overview. & Not supported & Supported \\\\\nCustomizi ng metadata & You can add, modify, or delete metadata of uploaded objects. You can set the bucket & All All & Supported & Supported Supported \\\\\nBucket storage quota & space quota to limit the maximum amount of data that can be stored in a bucket. The maximum value is 263-1, in bytes. By default, the quota of a newly created bucket is not limited. &  & Supported \\\\\nDirect reading & With direct reading enabled, you can download objects in the Archive storage class without restoring them in advance. Direct reading is a billable function. & See Function Overview. & Not supported & Supported \\\\\nObject sharing & You can share a file or folder stored in OBS with all users by using a temporary URL. All shared URLs are valid for only the specified period of time. & See Function Overview. & Supported & Supported \\\\\nFragment managem ent & You can clear fragments that are generated during multipart uploads to save storage space in a bucket. & All & Supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 28,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nEnterprise projects & When you create a bucket, you can specify an enterprise project for it, to facilitate bucket resource and permission management. & See Function Overview. & Not supported & Supported \\\\\nBucket encryptio n & You can enable default encryption for a bucket when creating it. Then all objects uploaded to this bucket later will be automatically encrypted. & See Function Overview. & Not supported & Supported \\\\\nMulti-AZ storage & When creating a bucket, you can choose multi-AZ storage to store your data in multiple AZs for a higher data reliability. OBS uses the Erasure Code (EC) algorithm, instead of multiple copies, to ensure data redundancy. & See Function Overview. & Not supported & Supported \\\\\nBack to source & With a back-to-source rule, if the data you requested is not found in OBS, OBS automatically pulls the data from its origin server and returns the data to you. & See Function Overview. & Not supported & Supported \\\\\nOnline decompre ssion & Online decompression allows you to compress multiple files into a ZIP package and upload it to OBS for auto decompression. & See Function Overview. & Not supported & Supported \\\\\nBucket settings replicatio n & You can replicate the settings of an existing bucket to the bucket you are creating. The following configurations can be replicated: bucket policies, CORS rules, back-to-source rules, image processing styles, online decompression rules, and lifecycle rules. & All & Not supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 29,
        "text": "\\begin{tabular}{lllll}\nFunction & Description & Region Availabilit y & OBS 2.0 & OBS 3.0 \\\\\nIAM agency & You can create an IAM agency to authorize other cloud services or Huawei Cloud accounts to manage your OBS resources. & All & Not supported & Supported \\\\\nMonitorin g & You can monitor the traffic statistics and requests of buckets on OBS Console and Cloud Eye, so that you are able to properly use your buckets. & See Function Overview. & Supported & Supported \\\\\nAudit & CTS keeps track of operations on buckets and objects in OBS.You can query the records from CTS for security analysis, compliance audit, resource tracking, and fault locating. & All & Supported & Supported \\\\\nTools & OBS offers a range of tools, including OBS Browser+, obsfs, and obsutil, for data migration and management in different scenarios. & All & Supported & Supported \\\\\nAPI & OBSprovides REST APls that support HTTP and HTTPS. You can call these APls to create, modify, and delete buckets, as well as to upload, download, or delete objects. & All & Supported & Supported \\\\\nSDKs & OBS SDKs help you perform secondarydevelopment. The SDKs are available in the following programming languages: Java, Python, C, Go, BrowserJS, .NET, Android, iOS, PHP, and Node.js. & All & Supported & Supported \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 30,
        "text": "# \nHuawei guarantees that its commitment to cyber security will never be outweighed by the consideration of commercial interests. To cope with emerging cloud security challenges and pervasive cloud security threats and attacks, Huawei Cloud builds a comprehensive cloud service security assurance system for different regions and industries based on Huawei's unique software and hardware advantages, laws, regulations, industry standards, and security ecosystem. \nSecurity is a shared responsibility between Huawei Cloud and you. Figure 5-1 illustrates how the security responsibilities are shared. \nHuawei Cloud: Ensure the security of cloud services and provide secure clouds. Huawei Cloud's security responsibilities include ensuring the security of our IaaS, PaaS, and SaaS services, as well as the physical environments of the Huawei Cloud data centers where our IaaS, PaaS, and SaaS services operate. Huawei Cloud is responsible for not only the security functions and performance of our infrastructure, cloud services, and technologies, but also for the overall cloud O&M security and, in the broader sense, the security and compliance of our infrastructure and services. Tenant: Use the cloud securely. Tenants of Huawei Cloud are responsible for the secure and effective management of the tenant-customized configurations of cloud services including IaaS, PaaS, and SaaS. This includes but is not limited to virtual networks, the OS of virtual machine hosts and guests, virtual firewalls, API Gateway, advanced security services, all types of cloud services, tenant data, identity accounts, and key management. \nHuawei Cloud Security White PaperHuawei Cloud Security White Paper elaborates on the ideas and measures for building Huawei Cloud security, including cloud security strategies, the shared responsibility model, compliance and privacy, security organizations and personnel, infrastructure security, tenant service and security, engineering security, O&M security, and ecosystem security."
    },
    {
        "page_idx": 31,
        "text": "Figure 5-1 Huawei Cloud shared security responsibility model \n# \n# \nYou can use OBS Console, OBS Browser $^+$ (a client), obsutil (a command line tool), APIs, and SDKs to access OBS. No matter which method you use, you are accessing OBS over the REST API. \nOBS REST APIs support both authenticated and anonymous requests. There will usually be anonymous requests in the scenarios that require public access, for example, accessing a hosted static website. In most cases, requests for OBS resources must be authenticated. An authenticated request must include a signature. The signature is calculated based on the requester's access keys (a pair of AK and SK) that are used as the encryption factor and the specific information included in the request body. OBS uses an access key ID (AK) and a secret access key (SK) together to authenticate the identity of a requester. For more information, see Access Keys (AK/SK). \nOther OBS access scenarios include: \nAccessing OBS Using Permanent Access Keys Accessing OBS Using Temporary Access Keys Accessing OBS Using a Temporary URL Accessing OBS Using an IAM Agency \n# \nOBS access control can be implemented based on IAM permissions, bucket policies, ACLs, URL validation, and CORS."
    },
    {
        "page_idx": 32,
        "text": "Table 5-1 OBS access control \n\\begin{tabular}{llll}\n\\multicolumn{2}{l}{Method} & Description & Reference \\\\\n\\multirow{3}{*}{Permi ssion contr 10} & IAM permissi ons & IAM permissions define which actions on your cloud resources are allowed or denied. After creating an IAM user, the administrator needs to add it to a user group and grant the permissions required by OBS to the user group. Then, all users in this group automatically inherit the granted permissions. & IAM Permissions \\\\\n & Bucket policies & A bucket policy applies to an OBS bucket and the objects in it. A bucket owner can use bucket policies to grant IAM users or other accounts the permissions required to operate the bucket and the objects in it. Bucket policies supplement, and in many cases, replace ACLs of buckets and objects. & BucketPolicies \\\\\n & ACLS & An access control list (ACL) defines grantees and their granted permissions. Bucket and object ACLs are associated with accounts or user groups. When you create a bucket or an object, OBS creates a default ACL that authorizes the owner full control over the bucket or object. Bucket or object owners can configure ACLs to grant basic read and write permissions to specific accounts or user groups. & ACLS \\\\\n\\multicolumn{2}{l}{URL validation} & URL validation protects your data in OBS from being stolen using the Referer field in HTTP requests. Such authorization is controlled using whitelists and blacklists. & URL Validation \\\\\n\\multicolumn{2}{l}{CORS} & OBS allows you to configure cross- origin resource sharing (CORS) rules on buckets to allow or forbid cross- origin requests from certain websites. & CORS \\\\\n\\end{tabular}\n\n\n# \nOBS takes different measures to keep data stored in OBS secure and reliable."
    },
    {
        "page_idx": 33,
        "text": "Table 5-2 Data protection measures \n\\begin{tabular}{lll}\nMeasure & Description & Reference \\\\\nTransmission encryption (HTTPS) & OBS supports HTTP and HTTPS, but HTTPS is recommended to enhance the security of data transmission. & Constructing a Request \\\\\nData redundancy & OBS uses the Erasure Code (EC) algorithm, instead of multiple copies, to ensure data redundancy. Compared with the multi-copy redundancy, EC delivers a higher storage space utilization while maintaining the same reliability level. When creating a bucket on OBS, you can choose a data redundancy policy. Choosing the multi-AZ storage will make your data redundantly stored in multiple AZs in the same region. If one AZ becomes unavailable, data can still be properly accessed from the other AZs. The multi-AZ storage is ideal for scenarios that demand high & CreatingaBucket \\\\\nData integrity verification (MD5) & reliability. During object uploads or downloads, data may become inconsistent due to network hijacking, caching, and other reasons. OBS verifies data consistency by calculating the MD5 value when data is uploaded or downloaded. & Data Consistency Verification \\\\\nServer-side encryption & With server-side encryption enabled, objects you upload to OBS will be encrypted into ciphertext before they are stored on the server.When objects are downloaded, they will be decrypted on the server first and then returned in plaintext form. & Server-Side Encryption \\\\\nCross-region replication & You can configure cross-region replication rules to automatically, asynchronously replicate data from a source bucket to a destination bucket in another region. This providesyou with the capability for disaster recovery across regions, catering to your needs for remote backup. & Cross-Region Replication \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 34,
        "text": "\\begin{tabular}{lll}\nMeasure & Description & Reference \\\\\nVersioning & When versioning is enabled for a bucket, OBS can keep multiple versions of an object in the bucket. That way you can quickly retrieve and restore every object version as needed, or recover data from both accidental actions and application failures. & Versioning \\\\\nCritical operation protection & With this function enabled, the system authenticates user's identity when they perform any risky operation like deleting a bucket. This enhances the protection for your data and configuration. & Critical Operation Protection \\\\\n\\end{tabular}\n\n\n# \n# \nCloud Trace Service (CTS) records operations on the cloud resources in your account. You can use the logs generated by CTS to perform security analysis, track resource changes, audit compliance, and locate faults. \nAfter you enable CTS and configure a tracker, CTS can record management and data traces of OBS for auditing. \nFor details about how to enable and configure CTS, see Enabling CTS. \nFor details about OBS management and data traces that can be tracked by CTS, see Cloud Trace Service."
    },
    {
        "page_idx": 35,
        "text": "Figure 5-2 CTS \n# \nYou can enable OBS logging for bucket analysis or audit. After logging is enabled for a bucket, OBS automatically logs access requests for the bucket and writes the generated log files into the specified bucket. With access logs, the bucket owner can deeply analyze the characteristics, types, or trends of requests sent to the bucket. \nFor the introduction and configuration of OBS logging, see Logging. \n# \nOBS offers a five-level reliability architecture. It ensures data durability and reliability by leveraging cross-region replication, disaster recovery across AZs, device and data redundancy in an AZ, and detection of slow disks and bad sectors."
    },
    {
        "page_idx": 36,
        "text": "Figure 5-3 Five-level reliability architecture of OBS \n# \nOBS uses Cloud Eye to perform monitoring over resources and operations, helping you monitor your buckets and receive alarms and notifications in real time. You can get the details about requests, traffic, bandwidth, error responses, and storage usage of your buckets. \nFor details about OBS monitoring metrics and how to create alarm rules, see Monitoring. \n# \n# \nHuawei Cloud services and platforms have obtained various security and compliance certifications from authoritative organizations, such as International Organization for Standardization (ISO). You can download them from the console."
    },
    {
        "page_idx": 37,
        "text": "Figure 5-4 Downloading compliance certificates \n# \nHuawei Cloud also provides the following resources to help users meet compliance requirements. For details, see Resource Center. \nFigure 5-5 Resource center"
    },
    {
        "page_idx": 38,
        "text": "# \nYou can use Identity and Access Management (IAM) to manage OBS permissions and control access to your resources. IAM provides identity authentication, permissions management, and access control. \nYou can create IAM users for your employees, and assign permissions to these users on a principle of least privilege (PoLP) basis to control their access to specific resource types. For example, you can create IAM users for software developers and assign specific permissions to allow them to use OBS resources but prevent them from being able to delete resources or perform any high-risk operations. \nIf your Huawei Cloud account does not require individual IAM users for permissions management, skip this section. \nIAM is a free service. You only pay for the resources in your account. For more information about IAM, see What Is IAM? \n# \nBy default, new IAM users do not have any permissions assigned. You can assign permissions to these users by adding them to one or more groups and attaching policies or roles to the groups. \nOBS is a global service deployed and accessed without specifying any physical region. OBS permissions are assigned to users in the global project, and users do not need to switch regions when accessing OBS. \nYou can grant users permissions by using roles or policies. \nRoles: A type of coarse-grained authorization mechanism that provides only a limited number of service-level roles. When using roles to grant permissions, you also need to assign dependency roles. However, roles are not an ideal choice for fine-grained authorization and secure access control. Policies: A type of fine-grained authorization mechanism that defines permissions required to perform operations on specific cloud resources under certain conditions. This mechanism allows for more flexible policy-based authorization for secure access control. For example, you can grant OBS users only the permissions for managing a certain type of OBS resources. Most policies define permissions based on APIs. For the API actions supported by OBS, see Permissions and Supported Actions."
    },
    {
        "page_idx": 39,
        "text": "# \nDue to data caching, a role and policy involving OBS actions will take effect 10 to 15 minutes after it is attached to a user, an enterprise project, and a user group. \nTable 6-1 lists all system permissions of OBS. \nTable 6-1 OBS system permissions \n\\begin{tabular}{llll}\nRole/Policy Name & Description & Type & Depend ency \\\\\nTenant Administrator & Allows you to perform all operations on all services except IAM. & System- defined role & None \\\\\nTenant Guest & Allows you to perform read-only operations on all services except IAM. & System- defined role & None \\\\\nOBS Administrator & Allows you to perform any operation on all OBS resources under the account. & System- defined policy & None \\\\\nOBS Buckets Viewer & Allows you to list buckets, and obtain basic bucket information and bucket metadata. & System- defined role & None \\\\\nOBS ReadOnlyAcces S & Allows you to list buckets, obtain basic bucket information and bucket metadata, and list objects (excluding versioned objects). NOTE If a user with this permission fails to list objects on OBS Console, there may be multiple versions of objects in the bucket. In this case, you need to grant the user the obs:bucket:ListBucketVersionspermission so that the user can view different versions of objects on OBS Console. & System- defined policy & None \\\\\nOBS OperateAccess & Allows you to perform all operations defined in OBS ReadOnlyAccess and to perform basic object operations, such as uploading objects, downloading objects, deleting objects, and obtaining object ACLs. NOTE If a user with this permission fails to list objects on OBS Console, there may be multipleversions ofobjectsinthebucket. In this case, you need to grant the user the obs:bucket:ListBucketVersionspermission so that the user canview differentversions ofobjectsonOBSConsole. & System- defined policy & None \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 40,
        "text": "Table 6-2 lists the common operations supported by each system-defined policy or role of OBS. Select the policies or roles as required. \nTable 6-2 Permissions and the allowed operations on OBS resources \n\\begin{tabular}{lllllll}\nOperatio n & Tenant Administ rator & Tenant Guest & OBS Administ rator & OBS Buckets Viewer & OBS ReadOnl yAccess & OBS Operate Access \\\\\nListing buckets & Yes & Yes & Yes & Yes & Yes & Yes \\\\\nCreating buckets & Yes & No & Yes & No & No & No \\\\\nDeleting buckets & Yes & No & Yes & No & No & No \\\\\nObtainin g basic bucket informati on & Yes & Yes & Yes & Yes & Yes & Yes \\\\\nControlli ng bucket access & Yes & No & Yes & No & No & No \\\\\nManagin g bucket policies & Yes & No & Yes & No & No & No \\\\\nModifyin g bucket storage classes & Yes & No & Yes & No & No & No \\\\\nListing objects & Yes & Yes & Yes & No & Yes & Yes \\\\\nListing objects with multiple versions & Yes & Yes & Yes & No & No & No \\\\\nUploadin g files & Yes & No & Yes & No & No & Yes \\\\\nCreating folders & Yes & No & Yes & No & No & Yes \\\\\nDeleting files & Yes & No & Yes & No & No & Yes \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 41,
        "text": "\\begin{tabular}{lllllll}\nOperatio n & Tenant Administ rator & Tenant Guest & OBS Administ rator & OBS Buckets Viewer & OBS ReadOnl yAccess & OBS Operate Access \\\\\nDeleting folders & Yes & No & Yes & No & No & Yes \\\\\nDownloa ding files & Yes & Yes & Yes & No & No & Yes \\\\\nDeleting files with multiple versions & Yes & No & Yes & No & No & Yes \\\\\nDownloa ding files with multiple versions & Yes & Yes & Yes & No & No & Yes \\\\\nModifyin g object storage classes & Yes & No & Yes & No & No & No \\\\\nRestoring files & Yes & No & Yes & No & No & No \\\\\nCancelin g the deletion of files & Yes & No & Yes & No & No & Yes \\\\\nDeleting fragment S & Yes & No & Yes & No & No & Yes \\\\\nControlli ng object access & Yes & No & Yes & No & No & No \\\\\nConfiguri ng object metadat a & Yes & No & Yes & No & No & No \\\\\nObtainin g object metadat a & Yes & Yes & Yes & No & No & Yes \\\\\nManagin g versionin g & Yes & No & Yes & No & No & No \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 42,
        "text": "\\begin{tabular}{lllllll}\nOperatio n & Tenant Administ rator & Tenant Guest & OBS Administ rator & OBS Buckets Viewer & OBS ReadOnl yAccess & OBS Operate Access \\\\\nManagin g logging & Yes & No & Yes & No & No & No \\\\\nManagin g tags & Yes & No & Yes & No & No & No \\\\\nManagin g lifecycle rules & Yes & No & Yes & No & No & No \\\\\nManagin g static website hosting & Yes & No & Yes & No & No & No \\\\\nManagin g CORS rules & Yes & No & Yes & No & No & No \\\\\nManagin g URL validatio n & Yes & No & Yes & No & No & No \\\\\nManagin g domain names & Yes & No & Yes & No & No & No \\\\\nManagin g cross- region replicatio n & Yes & No & Yes & No & No & No \\\\\nManagin g image processin g & Yes & No & Yes & No & No & No \\\\\nAppendin g objects & Yes & No & Yes & No & No & Yes \\\\\nConfiguri ng object ACL & Yes & No & Yes & No & No & No \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 43,
        "text": "\\begin{tabular}{lllllll}\nOperatio n & Tenant Administ rator & Tenant Guest & OBS Administ rator & OBS Buckets Viewer & OBS ReadOnl yAccess & OBS Operate Access \\\\\nConfiguri ng the ACL for an object of a specified version & Yes & No & Yes & No & No & No \\\\\nObtainin g object ACL informati on & Yes & Yes & Yes & No & No & Yes \\\\\nObtainin g the ACL informati on of a specified object version & Yes & Yes & Yes & No & No & Yes \\\\\nUploadin g in the multipart mode & Yes & No & Yes & No & No & Yes \\\\\nListing uploaded parts & Yes & Yes & Yes & No & No & Yes \\\\\nCancelin 6 multipart uploads & Yes & No & Yes & No & No & Yes \\\\\nConfiguri ng online decompr ession & Yes & No & No & No & No & No \\\\\n\\end{tabular}\n\n\n# \nAccess to OBS buckets and objects can be controlled by IAM user permissions, bucket policies, and ACLs. \nFor more information, see OBS Permission Control."
    },
    {
        "page_idx": 44,
        "text": "# \nTable 6-3 Roles or policies that are required for performing operations on OBS Console \n\\begin{tabular}{lll}\nOBS Console & Dependency & Role/Policy Required \\\\\nOperation Listing existing domain names (required when you configure a user-defined domain name or an acceleration & Domain Name Service (DNS) & Domains:domains:getDetails \\\\\ndomain name) Configuring mirroring back- to-source rules & Object Storage Service (OBS) & Tenant Administrator obs:object:HeadObject and obs:object:PutObject assigned by the IAM agency for OBS to pull data from its origin server kms:cmk:get, kms:cmk:list, kms:cmk:create, kms:dek:create, kms:dek:crypto, and kms:dek:crypto configured for the agency of OBS when \\\\\nObtaining mirroring back- to-source rules & Object Storage Service (OBS) & SSE-KMS is enabled for a bucket Tenant Administrator \\\\\nDeleting mirroring back- to-source rules & Object Storage Service (OBS) & Tenant Administrator \\\\\nConfiguring online decompression policies & Object Storage Service (OBS) & Tenant Administrator \\\\\nObtaining online decompression policies & Object Storage Service (OBS) & Tenant Administrator \\\\\nDeleting online decompression policies & Object Storage Service (OBS) & Tenant Administrator \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 45,
        "text": "\\begin{tabular}{lll}\nOBS Console Operation & Dependency & Role/Policy Required \\\\\nUploadingor downloading encrypted objects & Key Management Service (KMS) & kms:cmk:get, kms:cmk:list, kms:cmk:create,kms:dek:create, kms:dek:crypto, and kms:dek:crypto for uploading or downloading objects encrypted withSSE-KMS \\\\\n\\end{tabular}\n\n\n# \nWhat Is IAM?   \nIAM Basic Concepts   \nCreating a User and Granting OBS Permissions   \nIAM Policies and Supported Actions"
    },
    {
        "page_idx": 46,
        "text": "This section describes the restrictions on using OBS features. \nTable 7-1 OBS use restrictions and limitations \n\\begin{tabular}{ll}\nItem & Description \\\\\nBandwidth & By default, the maximum bandwidth for read/write (GET/ PUT)requests of a single Huawei Cloud account is 16 Gbit/s. If the actual bandwidth reaches the threshold, flow control will be triggered. If you require a bandwidth higher than 16 Gbit/s, submit a service ticket. \\\\\nQueries per second (QPS) & Default maximum QPS allowed by a single Huawei Cloud account: 6,0o0 write requests (PUT Object) per second 10,0o0 read requests (GET Object) per second 1,ooo listing requests (LisT) per second NOTE If you use sequential prefixes (such as timestamps or alphabetical order) for object naming, object access requests may be concentrated in a specific partition, resulting in access hotspots. This delay. Random prefixes are recommended for naming objects so that requests are evenly distributed across partitions, achieving horizontal expansion. For details about how to name objects with random prefixes,seeOptimizingthePerformance. If you require a higher QPS, submit a service ticket. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 47,
        "text": "\\begin{tabular}{ll}\nItem Resource & Description \\\\\npackages & A resource package can be used only in the specified region and cannot be shared across regions. So select an appropriate region when purchasing a resource package. OBS provides resource packages only for some billing items. For other billing items, the pay-per-use billing mode applies. For details, see Resource Package Overview. Any resource usage beyond your package quotas in the current month is billed in the pay-per-use mode. A newly purchased resource package cannot cover the already generated resource usage. A resource package must match your bucket's data redundancy policy (single-AZ storage or multi-AZ storage) and storage class (Standard, Infrequent Access, applies. Your Standard storage, Archive storage, and Internet outbound traffic packages can cover the fees incurred by both your parallel file systems and buckets. The pull traffic and cross-region replication traffic packages are \\\\\nAccessrules & currently not available for parallel file systems. In consideration of the DNS resolution performance and reliability, OBS requires that the bucket name must precede the domain when a request carrying a bucket name is constructed to form a three-level domain name, also mentioned as virtual-hosted-style access domain name. For example, you have a bucket named test-bucket in the ap-southeast-1 region, and you want to access the ACL of an object named test-object in the bucket. The correct URL is https://test-bucket.obs.ap- southeast-1.myhuaweicloud.com/test-object?acl. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 48,
        "text": "\\begin{tabular}{ll}\nItem & Description \\\\\nBuckets & On OBS, each bucket name must be unique and cannot be changed. After you create a bucket, its name, storage redundancy policy, and region cannot be changed. An account (including all IAM users under this account) can create a maximum of 1oo buckets and parallel file systems. You can use the fine-grained access control of OBS to properly plan and use buckets. For example, you can create folders in a bucket for storing objects with different prefixes and use fine-grained permission control to implement permission isolation between departments. By default, there is no limit on the storage capacity of the entire OBS system or a single bucket, and any number of objects can be stored. A bucket can be deleted only after all objects in the bucket have been deleted. The name of a deleted bucket can be reused for another bucket or a parallel file system at least 30 minutes after \\\\\nBucket inventories & the deletion. SeeBucket Inventory Overview. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 49,
        "text": "\\begin{tabular}{ll}\nItem & Description \\\\\nUploading objects & OBS Console has restrictions on the size and number of files uploaded. :In regions where batch upload is supported, a maximum of 1oo files can be uploaded at a time, with a maximum total size of 5 GB. If you upload only one file in a batch upload, it cannot exceed 5 GB in size. In regions where batch upload is not supported, only one file can be uploaded at a time, with a maximum size of 50 MB. ·If you use OBS Browser+, obsutil, an SDK, or an APl, you Batch upload is available only when: 1. The region where the bucket resides supports batch upload. 2. The bucket version is 3.0. If versioning is disabled for your bucket and you upload a new file with the same name as the one you previously uploaded to your bucket, the new file automatically overwrites the previous file and does not retain its ACL information. If you upload a new folder using the same name that was used with a previous folder in the bucket, \\\\\n & you upload has the same name as the one you previously uploaded to the bucket, a new file version will be added in the bucket. Though any UTF-8 characters can be used in object keys (object names), it is recommended that object keys be named according to the object key naming guidelines. meet the requirements of DNS, web security characters, XML analyzers, and other APls. \\\\\nDeleting objects & If versioning is not enabled for a bucket, deleted objects cannot be recovered. \\\\\nDeep Archive storage (under limited beta testing) & Append operations are not supported after objects are transitioned to the Deep Archive storage class. Batch restore is not available for objects in the Deep Archive storage class. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 50,
        "text": "\\begin{tabular}{ll}\nItem & Description \\\\\nRestoring Archive or Deep Archive objects & If an Archive or a Deep Archive object is being restored, you cannot suspend or delete the restore task. You cannot restore an object in the Restoring state. After an object is restored, an object copy in the Standard storage class will be generated. This way, there is an Archive or a Deep Archive object and a Standard object copy in the bucket at the same time. During the copy retention period, you will be billed for the storage space occupied by both the object and its copy. The Standard object copy will be automatically deleted upon its expiration. \\\\\nLifecycle management & There is no limit on the number of lifecycle rules in a bucket, but the total size of XML descriptions about all lifecycle rules in a bucket cannot exceed 20 KB. \\\\\nCross-region replication User-defined domain name & SeeCross-RegionReplication Overview. ● Only buckets in version 3.0 support user-defined domain \\\\\nbinding & name binding. By default, a maximum of 20 user-defined domain names can be bound to a bucket. In some regions (for example, CN South-Guangzhou), a bucket can have up to 30 user- defined domain names bound. For the maximum number allowed in each region, see the requirements on OBS Console. Currently, user domain names bound to OBS only allow access requests over HTTP. If you want to use a bound user domain name to access OBS over HTTPS, you need to enable CDN to manage HTTPS certificates. For details about how to manage HTTPS certificates on the CDN management console, see HTTPS Settings. A user-defined domain name can be bound to only one bucket. \\\\\nBack to source & Currently, the suffix of a user-defined domain name can contain 2 to 6 uppercase or lowercase letters. See Back toSource Overview. \\\\\nACLS & A bucket ACL can have up to 1o0 grants.The total bucket ACL size cannot exceed 50 KB. An object ACL can have up to 1o0 grants. The total object ACL size cannot exceed 50 KB. \\\\\nBucket policies & There is no limit on the number of bucket policies (statements) for a bucket, but the JSON descriptions of all \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 51,
        "text": "\\begin{tabular}{ll}\nItem & Description \\\\\nParallelfile systems & See the Parallel File System Feature Guide. \\\\\nImage processing & See the ImageProcessing FeatureGuide. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 52,
        "text": "Table 8-1 Related services \n\\begin{tabular}{lll}\nInteractive Function & Related Service & Reference \\\\\nMigrate data to OBS using the related services. & Direct Connect (DC) & Using a Direct Connect Connection to Migrate Local Data to OBS \\\\\nAccess OBS from ECS over the intranet of Huawei Cloud. & Elastic Cloud Server (ECS) & Accessing OBS over Intranet \\\\\nIAM provides the following functions: User identity authentication IAM user permission control IAM agency configuration & Identity and Access Management (IAM) & Permissions Management Configuring User Permissions \\\\\nCloud Eye monitors OBS buckets, to collect statistics about the upload traffic, download traffic, number of GET and PUT requests, the average TTFB of GET requests, and the number of 4xx and 5xx errors. & Cloud Eye & OBS Monitoring Metrics on Cloud Eye \\\\\nCTS collects records of operations on OBS resources, facilitating querying, audits, and backtracking. & Cloud Trace Service (CTS) & Cloud Trace Service \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 53,
        "text": "\\begin{tabular}{lll}\nInteractive Function & Related Service & Reference \\\\\nTags are used to label and classify buckets in OBS. & Tag Management Service (TMS) & Tags \\\\\nKMS encrypts files uploaded to the OBS. & Data Encryption Workshop (DEW) & Server-Side Encryption \\\\\nCDN accelerates the customized domain names bound to OBS buckets. & Content Delivery Network (CDN) & User-Defined Domain Name Binding \\\\\nDNS resolves domain names configured for static website hosting in OBS. & Domain Name Service (DNS) & Using a User- Defined Domain Name to Host a Static Website User-Defined Domain Name Binding \\\\\n\\end{tabular}\n\n\nOBS can be used as the storage resource pool for other cloud services such as Image Management Service (IMS) and Cloud Trace Service (CTS)."
    },
    {
        "page_idx": 54,
        "text": "# \nObjects are basic units stored in OBS. An object contains both data and the metadata that describes data attributes. Data uploaded to OBS is stored in buckets as objects. \nAn object consists of the following: \nA key that specifies the name of an object. An object key is a UTF-8 string up   \nto 1,024 characters long. Each object is uniquely identified by a key within a   \nbucket.   \nMetadata that describes an object. The metadata is a set of key-value pairs   \nthat are assigned to objects stored in OBS. There are two types of metadata:   \nsystem-defined metadata and custom metadata. System-defined metadata is automatically assigned by OBS for processing objects. Such metadata includes Date, Content-Length, Last-Modified, ETag, and more. You can specify custom metadata to describe the object when you upload an object to OBS. \nData that refers to the content of an object. \nGenerally, objects are managed as files. However, OBS is an object-based storage service and there is no concept of files and folders. For easy data management, OBS provides a method to simulate folders. By adding a slash $(/)$ to an object name, for example, test/123.jpg, you can specify test as a folder and 123.jpg as the name of a file in the test folder. The key of the object is test/123.jpg. \nWhen uploading an object, you can set a storage class for the object. If no storage class is specified, the object is stored in the same storage class as the bucket in which it resides. You can also change the storage class of an existing object in a bucket. \nOn OBS Console and OBS Browser+, you can use folders the same way you use them in a file system. \nFor details about object operations, see Managing Objects."
    },
    {
        "page_idx": 55,
        "text": "# \nBuckets are containers for storing objects. OBS provides flat storage in the form of buckets and objects. Unlike the conventional multi-layer directory structure of file systems, all objects in a bucket are stored at the same logical layer. \nEach bucket has its own attributes, such as access permissions, storage class, and the region. You can specify access permissions, storage class, and regions when creating buckets. You can also configure advanced attributes to meet storage requirements in different scenarios. \nOBS provides the following storage classes for buckets: Standard, Infrequent Access, Archive, and Deep Archive (under limited beta testing). With support for these storage classes, OBS caters to diverse storage performance and cost requirements. When creating a bucket, you can specify a storage class for it, which can be changed later. \nEach bucket name in OBS is globally unique and cannot be changed after the bucket has been created. The region where a bucket resides cannot be changed once the bucket is created. When you create a bucket, OBS creates a default access control list (ACL) that grants users permissions (such as read and write permissions) on the bucket. Only authorized users can perform operations such as creating, deleting, viewing, and configuring buckets. \nAn account (including all IAM users under this account) can create a maximum of 100 buckets and parallel file systems. However, there is no restriction on the number and total size of objects in a bucket. \nOBS adopts the REST architectural style, and is based on HTTP and HTTPS. You can use URLs to locate resources. \nFigure 9-1 illustrates the relationship between buckets and objects in OBS. \nFigure 9-1 Relationship between objects and buckets \nFor details about bucket operations, see Managing Buckets."
    },
    {
        "page_idx": 56,
        "text": "# \nParallel File System (PFS) is a high-performance semantic file system provided by OBS. It features access latency in milliseconds, TB/s-level bandwidth, and millions of IOPS, which makes it ideal for processing high-performance computing (HPC) workloads. \nIt also supports data read and write through obsfs, a PFS client that supports POSIX. obsfs can be deployed on a Linux ECS, and then you can use obsfs to mount a parallel file system to that server. Once mounted, PFS functions like a local file system. You can manage the PFS online, including creating, deleting, renaming files and folders, or modifying files. \nFor details about PFS, see the Parallel File System Feature Guide. \n# \nOBS uses an access key ID (AK) and secret access key (SK) to authenticate the identity of a requester. When you use OBS APIs for secondary development and use the AK and SK for authentication, the signature must be calculated based on the algorithm defined by OBS and added to the request. \nThe authentication can be based on a permanent AK and SK pair, or based on a temporary AK/SK pair and security token. \n# \nYou can create a pair of permanent AK and SK on the My Credentials page. For details, see Obtaining Access Keys (AK and SK). \nAccess key ID (AK): indicates the ID of the access key. It is the unique ID associated with the SK. The AK and SK are used together to obtain an encrypted signature for a request.   \nSecret access key (SK): indicates the private key used together with its associated AK to cryptographically sign requests. The AK and SK are used together to identify a request sender to prevent the request from being modified. \n# \nA temporary AK/SK pair and security token assigned by OBS comply with the principle of least privilege and are for temporarily accessing OBS. They are valid from 15 minutes to 24 hours, and need to be obtained again once they expire. If the security token is missing from your request, a 403 error will be returned. \nTemporary AK: indicates the ID of a temporary access key. It is the unique ID associated with the SK. The AK and SK are used together to obtain an encrypted signature for a request.   \nTemporary SK: indicates the temporary private key used together with its associated temporary AK. The AK and SK are used together to identify a request sender to prevent the request from being modified.   \nSecurity token: indicates the token used together with the temporary AK and SK to access all resources of a specified account."
    },
    {
        "page_idx": 57,
        "text": "When using the following tools to access OBS resources, you need to use the AK/SK pair for security authentication. \nTable 9-1 OBS resource management tools \n\\begin{tabular}{ll}\nTool & AK/SKConfiguration \\\\\nOBSBrowser+ & Configure the AK and SK during login account configuration. For details, see Logging In to OBS Browser+. \\\\\nobsutil & Configure the AK and SK when initializing the configuration. For details, seePerforming theInitial Configuration. \\\\\nobsfs & Configure the AK and SK when initializing the configuration. For details, see Initializing obsfs. \\\\\nSDKs & Configure the AK and SK in the initialization phase. For details,seetheSDKReference. \\\\\nAPIs & Add the AK/SK pair to the request when computing the signature. For details, see User Signature Authentication. \\\\\n\\end{tabular}\n\n\n# \nFor details about how to obtain a permanent AK/SK pair, see Obtaining Access Keys (AK and SK). \nFor details about how to obtain a temporary AK/SK pair and security token, see Obtaining a Temporary Access Key Pair and Security Token. \n# \nEndpoint: OBS provides an endpoint for each region. An endpoint is considered a domain name to access OBS in a region and is used to process requests of that region. For details about regions and endpoints, see Regions and Endpoints. \nBucket domain name: Each bucket in OBS has a domain name. A domain name is the address of a bucket and can be used to access the bucket over the Internet. It is applicable to cloud application development and data sharing. \nAn OBS bucket domain name is in the format of BucketName.Endpoint, where BucketName indicates the name of the bucket, and Endpoint indicates the domain name of the region where the bucket is located. \nTable 9-2 lists the bucket domain name and other domain names in OBS, including their structure and protocols."
    },
    {
        "page_idx": 58,
        "text": "Table 9-2 OBS domain names \n\\begin{tabular}{llll}\nType & Structure & Description & Prot 1030 \\\\\nRegion al domain name & [Structure] Endpoint [Example] obs.ap- southeast-1.myhuaweicloud.com & Each region has an endpoint, which is the domain name of the region. For regions and endpoints, see Regions and Endpoints Each region corresponds to an OBS endpoint that keeps unchanged on both the internal and external networks. After access over an intranet is configured, you can access OBS through an internal network. & HTT PS HTT P \\\\\nBucket domain name & [Structure] BucketName.Endpoint [Example] bucketname.obs.ap- southeast-1.myhuaweicloud.com & After a bucket is created, you can use the domain name to access the bucket. You can compose the domain name according to the structure of bucket domain names, or you can obtain it from basic information of the bucket on OBS Console or OBS Browser+. & HTT PS HTT P \\\\\nObject domain name & [Structure] BucketName.Endpoint/ ObjectName [Example] bucketname.obs.ap- southeast-1.myhuaweicloud.com/ object.txt & After an object is uploaded to a bucket, you can use the object domain name to access the object. You can spell out the domain name according to the structure of object domain names, or you can obtain it from the object details on OBS ConsoleorOBSBrowser+ Alternatively, you can call the GetObjectUrl API through theSDK to obtain the object domain name. & HTT PS HTT P \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 59,
        "text": "\\begin{tabular}{llll}\nType & Structure & Description & Prot 1000 \\\\\nStatic website domain name & [Structure] BucketName.obs- website.Endpoint [Example] bucketname.obs-website.ap- southeast-1.myhuaweicloud.com & Astaticwebsitedomain name is a bucket domain name when the bucket is configured to host a static website. & HTT PS HTT P \\\\\nUser- defined domain name & Self-owned domain name registered with a domain name provider & You can bind a user domain name to a bucket so that you can access the bucket through the user domain name. & HTT P \\\\\n\\end{tabular}\n\n\n# \n# \nA region and availability zone (AZ) identify the location of a data center. You can create resources in a specific region and AZ. \nRegions are classified based on geographical location and network latency. Public services, such as Elastic Cloud Server (ECS), Elastic Volume Service (EVS), Object Storage Service (OBS), Virtual Private Cloud (VPC), Elastic IP (EIP), and Image Management Service (IMS), are shared within the same region. Regions are classified as universal regions and dedicated regions. A universal region provides universal cloud services for common tenants. A dedicated region provides services of the same type or only provides services for specific tenants. An AZ contains one or more physical data centers. Each AZ has independent cooling, fire extinguishing, moisture-proofing, and electricity facilities. Within an AZ, computing, network, storage, and other resources are logically divided into multiple clusters. AZs within a region are interconnected using highspeed optical fibers to allow you to build cross-AZ high-availability systems. \nFigure 9-2 shows the relationship between the regions and AZs."
    },
    {
        "page_idx": 60,
        "text": "Figure 9-2 Regions and AZs \nHuawei Cloud provides services in many regions around the world. You can select a region and AZ according to your requirement. For more information, see Huawei Cloud Global Regions. \n# \nWhen selecting a region, consider the following factors: \nLocation \nSelect a region close to you or your target users. This reduces network latency and improves access speed. However, Chinese mainland regions provide the same infrastructure, BGP network quality, as well as resource operations and configurations. If you or your target users are in the Chinese mainland, you do not need to consider differences in network latency when selecting a region. \nIf you or your target users are in the Asia Pacific region (excluding the Chinese mainland), select regions such as AP-Bangkok and AP-Singapore. If you or your target users are in Africa, select the AF-Johannesburg region. If you or your target users are in Europe, select the EU-Paris region. \nResource prices \nResource prices may vary depending on different regions. For details, see Product Pricing Details. \n# \nWhen determining whether to deploy resources in the same AZ, consider your applications' requirements for disaster recovery (DR) and network latency. \n● For high DR capability, deploy resources in different AZs in the same region. For low network latency, deploy resources in the same AZ. \n# \nBefore using an API to call resources, you must specify its region and endpoint. For details about Huawei Cloud regions and endpoints, see Regions and Endpoints."
    },
    {
        "page_idx": 61,
        "text": "# \n\n\\begin{tabular}{ll}\nRelease Date & What's New \\\\\n2024-02-28 & This issue is the twenty-sixth official release. This issue incorporates the following change: Added the content related to Deep Archive storage (under limited beta testing). \\\\\n2023-12-28 & This issue is the twenty-fifth official release. This issue incorporates the following change: Added the permission dependency of OBS Console in Permissions Management. \\\\\n2023-12-19 & This issue is the twenty-fourth official release. This issue incorporates the following change: Updated the figure of the shared responsibility model in SharedResponsibilities. \\\\\n2023-09-12 & This issue is the twenty-third official release. This issue incorporates the following change: Put online decompression into commercial use. \\\\\n2023-07-21 & This issue is the twenty-second official release. This issue incorporates the following change: Added AP-Jakarta in the regions that support monitoring in Functions. \\\\\n2023-07-14 & This issue is the twenty-first official release. This issue incorporates the following change: Added AP-Jakarta in the regions that support back to source in Functions. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 62,
        "text": "\\begin{tabular}{ll}\nRelease Date & What'sNew \\\\\n2023-07-06 & This issue is the twentieth official release. This issue incorporates the following change: Added the descriptions about SSE-OBS. \\\\\n2023-06-16 & This issue is the nineteenth official release. This issue incorporates the following changes: Updated the release regions of back to source in Functions. \\\\\n2023-04-23 & Updated the release regions of multi-AZ storage in Functions. This issue is the eighteenth official release. This issue incorporates the following change: \\\\\n2023-01-19 & Added descriptions about the WORM feature. This issue is the seventeenth official release. This issue incorporates the following change: \\\\\n2022-11-25 & Removed the content related to event notifications. This issue is the sixteenth official release. This issue incorporates the following change: \\\\\n2020-10-13 2020-03-31 & ·Added descriptions about OBS security. This issue is the fifteenth official release. This issue incorporates the following change: Added section \"Restrictions.\" \\\\\n2020-01-20 & This issue is the fourteenth official release. This issue incorporates the following change: \\\\\n2019-11-22 & ·Added the \"Billing\" section. This issue is the thirteenth official release. This issue incorporates the following changes: \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 63,
        "text": "\\begin{tabular}{ll}\nRelease Date & What's New \\\\\n2019-08-15 & This issue is the tenth official release. This issue incorporates the following changes: · Added the concepts of region and Az. \\\\\n2019-05-22 & This issue is the ninth official release. This issue incorporates the following changes: Updated the description about permission control. \\\\\n2019-02-22 & This issue is the eighth official release. This issue incorporates the following changes: · Updated the description about user permissions. \\\\\n2018-11-30 & This issue is the seventh official release. This issue incorporates the following changes: Updated the section \"Related Services\". Updated the section \"Documentation Guide\". This issue is the sixth official release. \\\\\n & This issue incorporates the following changes: Updated the description about user permissions. Added the description about methods to access OBS. Updated the application scenarios of OBS. This issue is the fifth official release. \\\\\n2018-06-08 & This issue incorporates the following changes: Added the tag function. Added the cloud trace function. This issue is the fourth official release. \\\\\n2018-03-20 & This issue incorporates the following changes: Added the session of \"Cloud Eye Monitoring Metrics\". This issue is the third official release. This issue incorporates the following changes: Added object storage classes. \\\\\n\\end{tabular}"
    },
    {
        "page_idx": 64,
        "text": "\\begin{tabular}{ll}\nRelease Date & What's New \\\\\n2018-01-19 & This issue is the second official release. This issue incorporates the following changes: Added the section \"Accessing OBS with Domain Names\". Added the section \"Time Difference Is Longer Than 15 MinutesBetween the Client and theServer\". Addederrorcodes. Updated the method of obtaining the AK, SK, account ID, and \\\\\n2017-12-31 & user ID. Updated the description about the ACL. This issue is the first official release. \\\\\n\\end{tabular}"
    }
]