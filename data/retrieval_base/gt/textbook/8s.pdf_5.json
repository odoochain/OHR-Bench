[
    {
        "text": "a. $\\alpha$ should be a primary key for $r_{1},$ and $\\alpha$ should be the foreign key from $r_{2,i}$ referencing $r_{1}.$\n\nb. If the foreign key constraint is not enforced, then a deletion of a tuple from $r_{1}$ would not have a corresponding deletion from the referencing tuples in $r_{2}.$ Instead of deleting a tuple from $r,$ this would amount to simply setting the value of $\\alpha$ to null in some tuples.\n\nc. For every schema $r_{i}(\\alpha\\beta)$ added to the schema because of a rule $\\alpha\\rightarrow\\beta,\\alpha$ should be made the primary key. Also, a candidate key $\\gamma$ for the original relation is located in some newly created relation $r_{k},$ and is a primary key for that relation. Foreign key constraints are created as follows: for each relation $r_{i}$ created above, if the primary key attributes of $r_{i}$ also occur in any other relation $r_{j},$ then a foreign key constraint is created from those attributes in $r_{j},$ referencing (the primary key of) $r_{i}.$\n\n8.12 Let $R_{1}, R_{2}, \\ldots, R_{n}$ be a decomposition of schema $U.$ Let $u(U)$ be a relation, and let $r_{i} = \\Pi_{R_{i}}(u).$ Show that  \n\n$$\nu \\subseteq r_{1} \\bowtie r_{2} \\bowtie \\cdots \\bowtie r_{n}\n$$  \n\nAnswer: Consider some tuple $t$ in $u.$ Note that $r_{i} = \\Pi_{R_{i}}(u)$ implies that $t[R_{i}] \\in r_{i}, 1 \\leq i \\leq n.$ Thus,  \n\n$$\nt[R_{1}] \\bowtie t[R_{2}] \\bowtie \\ldots \\bowtie t[R_{n}] \\in r_{1} \\bowtie r_{2} \\bowtie \\ldots \\bowtie r_{n}\n$$  \n\nBy the definition of natural join  \n\n$$\nt[R_{1}] \\bowtie t[R_{2}] \\bowtie \\ldots \\bowtie t[R_{n}] = \\Pi_{\\alpha}\\left(\\sigma_{\\beta}\\left(t[R_{1}] \\times t[R_{2}] \\times \\ldots \\times t[R_{n}]\\right)\\right)\n$$  \n\nwhere the condition $\\beta$ is satisfied if values of attributes with the same name in a tuple are equal and where $\\alpha = U.$ The cartesian product of single tuples generates one tuple. The selection process is satisfied because all attributes with the same name must have the same value since they are projections from the same tuple. Finally, the projection clause removes duplicate attribute names.  \n\nBy the definition of decomposition, $U = R_{1} \\cup R_{2} \\cup \\ldots \\cup R_{n},$ which means that all attributes of $t$ are in $t[R_{1}] \\bowtie t[R_{2}] \\bowtie \\ldots \\bowtie t[R_{n}].$ That is, $t$ is equal to the result of this join.  \n\nSince $t$ is any arbitrary tuple in $u,$  \n\n$$\nu \\subseteq r_{1} \\bowtie r_{2} \\bowtie \\ldots \\bowtie r_{n}\n$$  \n\n8.13 Show that the decomposition in Practice Exercise 8.1 is not a dependency-preserving decomposition.  \n\nAnswer: The dependency $B \\rightarrow D$ is not preserved. $F_{1},$ the restriction of $F$ to $(A, B, C)$ is $A \\rightarrow A B C, A \\rightarrow A B, A \\rightarrow A C, A \\rightarrow B C,$",
        "page_idx": 0
    }
]